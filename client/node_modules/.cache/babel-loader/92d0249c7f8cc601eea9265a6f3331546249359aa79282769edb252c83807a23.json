{"ast":null,"code":"import { __assign, __awaiter, __generator, __rest, __spreadArray } from \"tslib\";\nimport { useEffect, useRef } from 'react';\nimport { useChannelActionContext } from '../../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../../context/TranslationContext';\nimport { LinkPreviewState } from '../types';\nvar getAttachmentTypeFromMime = function (mime) {\n  if (mime.includes('video/')) return 'video';\n  if (mime.includes('audio/')) return 'audio';\n  return 'file';\n};\nexport var useSubmitHandler = function (props, state, dispatch, numberOfUploads, enrichURLsController) {\n  var clearEditingState = props.clearEditingState,\n    message = props.message,\n    overrideSubmitHandler = props.overrideSubmitHandler,\n    parent = props.parent,\n    publishTypingEvent = props.publishTypingEvent;\n  var attachments = state.attachments,\n    fileOrder = state.fileOrder,\n    fileUploads = state.fileUploads,\n    imageOrder = state.imageOrder,\n    imageUploads = state.imageUploads,\n    linkPreviews = state.linkPreviews,\n    mentioned_users = state.mentioned_users,\n    text = state.text;\n  var cancelURLEnrichment = enrichURLsController.cancelURLEnrichment,\n    findAndEnqueueURLsToEnrich = enrichURLsController.findAndEnqueueURLsToEnrich;\n  var channel = useChannelStateContext('useSubmitHandler').channel;\n  var _a = useChannelActionContext('useSubmitHandler'),\n    addNotification = _a.addNotification,\n    editMessage = _a.editMessage,\n    sendMessage = _a.sendMessage;\n  var t = useTranslationContext('useSubmitHandler').t;\n  var textReference = useRef({\n    hasChanged: false,\n    initialText: text\n  });\n  useEffect(function () {\n    if (!textReference.current.initialText.length) {\n      textReference.current.initialText = text;\n      return;\n    }\n    textReference.current.hasChanged = text !== textReference.current.initialText;\n  }, [text]);\n  var getAttachmentsFromUploads = function () {\n    var imageAttachments = imageOrder.map(function (id) {\n      return imageUploads[id];\n    }).filter(function (upload) {\n      return upload.state !== 'failed';\n    }).filter(function (_a, _, self) {\n      var id = _a.id,\n        url = _a.url;\n      return self.every(function (upload) {\n        return upload.id === id || upload.url !== url;\n      });\n    }).filter(function (upload) {\n      // keep the OG attachments in case the text has not changed as the BE\n      // won't re-enrich the message when only attachments have changed\n      if (!textReference.current.hasChanged) return true;\n      return !upload.og_scrape_url;\n    }).map(function (_a) {\n      var name = _a.file.name,\n        url = _a.url,\n        rest = __rest(_a, [\"file\", \"url\"]);\n      return {\n        author_name: rest.author_name,\n        fallback: name,\n        image_url: url,\n        og_scrape_url: rest.og_scrape_url,\n        text: rest.text,\n        title: rest.title,\n        title_link: rest.title_link,\n        type: 'image'\n      };\n    });\n    var fileAttachments = fileOrder.map(function (id) {\n      return fileUploads[id];\n    }).filter(function (upload) {\n      return upload.state !== 'failed';\n    }).map(function (upload) {\n      return {\n        asset_url: upload.url,\n        file_size: upload.file.size,\n        mime_type: upload.file.type,\n        thumb_url: upload.thumb_url,\n        title: upload.file.name,\n        type: getAttachmentTypeFromMime(upload.file.type || '')\n      };\n    });\n    return __spreadArray(__spreadArray(__spreadArray([], attachments, true), imageAttachments, true), fileAttachments, true);\n  };\n  var handleSubmit = function (event, customMessageData) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var trimmedMessage, isEmptyMessage, someAttachmentsUploading, attachmentsFromUploads, attachmentsFromLinkPreviews, someLinkPreviewsLoading, someLinkPreviewsDismissed, newAttachments, actualMentionedUsers, updatedMessage, linkPreviewsEnabled, skip_enrich_url, sendOptions, err_1, err_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            event.preventDefault();\n            trimmedMessage = text.trim();\n            isEmptyMessage = trimmedMessage === '' || trimmedMessage === '>' || trimmedMessage === '``````' || trimmedMessage === '``' || trimmedMessage === '**' || trimmedMessage === '____' || trimmedMessage === '__' || trimmedMessage === '****';\n            if (isEmptyMessage && numberOfUploads === 0) return [2 /*return*/];\n            someAttachmentsUploading = Object.values(imageUploads).some(function (upload) {\n              return upload.state === 'uploading';\n            }) || Object.values(fileUploads).some(function (upload) {\n              return upload.state === 'uploading';\n            });\n            if (someAttachmentsUploading) {\n              return [2 /*return*/, addNotification(t('Wait until all attachments have uploaded'), 'error')];\n            }\n            attachmentsFromUploads = getAttachmentsFromUploads();\n            attachmentsFromLinkPreviews = [];\n            if (findAndEnqueueURLsToEnrich) {\n              // filter out all the attachments scraped before the message was edited - only if the scr\n              attachmentsFromUploads = attachmentsFromUploads.filter(function (attachment) {\n                return !attachment.og_scrape_url;\n              });\n              // prevent showing link preview in MessageInput after the message has been sent\n              cancelURLEnrichment();\n              someLinkPreviewsLoading = Array.from(linkPreviews.values()).some(function (linkPreview) {\n                return [LinkPreviewState.QUEUED, LinkPreviewState.LOADING].includes(linkPreview.state);\n              });\n              someLinkPreviewsDismissed = Array.from(linkPreviews.values()).some(function (linkPreview) {\n                return linkPreview.state === LinkPreviewState.DISMISSED;\n              });\n              if (!someLinkPreviewsLoading) {\n                attachmentsFromLinkPreviews = Array.from(linkPreviews.values()).filter(function (linkPreview) {\n                  return linkPreview.state === LinkPreviewState.LOADED && !attachmentsFromUploads.find(function (attFromUpload) {\n                    return attFromUpload.og_scrape_url === linkPreview.og_scrape_url;\n                  });\n                })\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                .map(function (_a) {\n                  var linkPreviewState = _a.state,\n                    ogAttachment = __rest(_a, [\"state\"]);\n                  return ogAttachment;\n                });\n              }\n            }\n            newAttachments = __spreadArray(__spreadArray([], attachmentsFromUploads, true), attachmentsFromLinkPreviews, true);\n            actualMentionedUsers = Array.from(new Set(mentioned_users.filter(function (_a) {\n              var id = _a.id,\n                name = _a.name;\n              return text.includes(\"@\".concat(id)) || text.includes(\"@\".concat(name));\n            })));\n            updatedMessage = {\n              attachments: newAttachments,\n              mentioned_users: actualMentionedUsers,\n              text: text\n            };\n            linkPreviewsEnabled = !!findAndEnqueueURLsToEnrich;\n            skip_enrich_url = linkPreviewsEnabled && (!someLinkPreviewsLoading && attachmentsFromLinkPreviews.length > 0 || someLinkPreviewsDismissed);\n            sendOptions = linkPreviewsEnabled ? {\n              skip_enrich_url: skip_enrich_url\n            } : undefined;\n            if (!message) return [3 /*break*/, 5];\n            delete message.i18n;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, editMessage(__assign(__assign(__assign({}, message), updatedMessage), customMessageData), sendOptions)];\n          case 2:\n            _a.sent();\n            clearEditingState === null || clearEditingState === void 0 ? void 0 : clearEditingState();\n            dispatch({\n              type: 'clear'\n            });\n            return [3 /*break*/, 4];\n          case 3:\n            err_1 = _a.sent();\n            addNotification(t('Edit message request failed'), 'error');\n            return [3 /*break*/, 4];\n          case 4:\n            return [3 /*break*/, 13];\n          case 5:\n            _a.trys.push([5, 12,, 13]);\n            dispatch({\n              type: 'clear'\n            });\n            if (!overrideSubmitHandler) return [3 /*break*/, 7];\n            return [4 /*yield*/, overrideSubmitHandler(__assign(__assign({}, updatedMessage), {\n              parent: parent\n            }), channel.cid, customMessageData, sendOptions)];\n          case 6:\n            _a.sent();\n            return [3 /*break*/, 9];\n          case 7:\n            return [4 /*yield*/, sendMessage(__assign(__assign({}, updatedMessage), {\n              parent: parent\n            }), customMessageData, sendOptions)];\n          case 8:\n            _a.sent();\n            _a.label = 9;\n          case 9:\n            if (!publishTypingEvent) return [3 /*break*/, 11];\n            return [4 /*yield*/, channel.stopTyping()];\n          case 10:\n            _a.sent();\n            _a.label = 11;\n          case 11:\n            return [3 /*break*/, 13];\n          case 12:\n            err_2 = _a.sent();\n            dispatch({\n              getNewText: function () {\n                return text;\n              },\n              type: 'setText'\n            });\n            actualMentionedUsers === null || actualMentionedUsers === void 0 ? void 0 : actualMentionedUsers.forEach(function (user) {\n              dispatch({\n                type: 'addMentionedUser',\n                user: user\n              });\n            });\n            addNotification(t('Send message request failed'), 'error');\n            return [3 /*break*/, 13];\n          case 13:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  return {\n    handleSubmit: handleSubmit\n  };\n};","map":{"version":3,"names":["__assign","__awaiter","__generator","__rest","__spreadArray","useEffect","useRef","useChannelActionContext","useChannelStateContext","useTranslationContext","LinkPreviewState","getAttachmentTypeFromMime","mime","includes","useSubmitHandler","props","state","dispatch","numberOfUploads","enrichURLsController","clearEditingState","message","overrideSubmitHandler","parent","publishTypingEvent","attachments","fileOrder","fileUploads","imageOrder","imageUploads","linkPreviews","mentioned_users","text","cancelURLEnrichment","findAndEnqueueURLsToEnrich","channel","_a","addNotification","editMessage","sendMessage","t","textReference","hasChanged","initialText","current","length","getAttachmentsFromUploads","imageAttachments","map","id","filter","upload","_","self","url","every","og_scrape_url","name","file","rest","author_name","fallback","image_url","title","title_link","type","fileAttachments","asset_url","file_size","size","mime_type","thumb_url","handleSubmit","event","customMessageData","trimmedMessage","isEmptyMessage","someAttachmentsUploading","attachmentsFromUploads","attachmentsFromLinkPreviews","someLinkPreviewsLoading","someLinkPreviewsDismissed","newAttachments","actualMentionedUsers","updatedMessage","linkPreviewsEnabled","skip_enrich_url","sendOptions","err_1","err_2","label","preventDefault","trim","Object","values","some","attachment","Array","from","linkPreview","QUEUED","LOADING","DISMISSED","LOADED","find","attFromUpload","linkPreviewState","ogAttachment","Set","concat","undefined","i18n","trys","push","sent","cid","stopTyping","getNewText","forEach","user"],"sources":["C:/Users/praka/OneDrive/Desktop/Tic-Tac-Toe/client/node_modules/stream-chat-react/dist/components/MessageInput/hooks/useSubmitHandler.js"],"sourcesContent":["import { __assign, __awaiter, __generator, __rest, __spreadArray } from \"tslib\";\nimport { useEffect, useRef } from 'react';\nimport { useChannelActionContext } from '../../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../../context/TranslationContext';\nimport { LinkPreviewState } from '../types';\nvar getAttachmentTypeFromMime = function (mime) {\n    if (mime.includes('video/'))\n        return 'video';\n    if (mime.includes('audio/'))\n        return 'audio';\n    return 'file';\n};\nexport var useSubmitHandler = function (props, state, dispatch, numberOfUploads, enrichURLsController) {\n    var clearEditingState = props.clearEditingState, message = props.message, overrideSubmitHandler = props.overrideSubmitHandler, parent = props.parent, publishTypingEvent = props.publishTypingEvent;\n    var attachments = state.attachments, fileOrder = state.fileOrder, fileUploads = state.fileUploads, imageOrder = state.imageOrder, imageUploads = state.imageUploads, linkPreviews = state.linkPreviews, mentioned_users = state.mentioned_users, text = state.text;\n    var cancelURLEnrichment = enrichURLsController.cancelURLEnrichment, findAndEnqueueURLsToEnrich = enrichURLsController.findAndEnqueueURLsToEnrich;\n    var channel = useChannelStateContext('useSubmitHandler').channel;\n    var _a = useChannelActionContext('useSubmitHandler'), addNotification = _a.addNotification, editMessage = _a.editMessage, sendMessage = _a.sendMessage;\n    var t = useTranslationContext('useSubmitHandler').t;\n    var textReference = useRef({ hasChanged: false, initialText: text });\n    useEffect(function () {\n        if (!textReference.current.initialText.length) {\n            textReference.current.initialText = text;\n            return;\n        }\n        textReference.current.hasChanged = text !== textReference.current.initialText;\n    }, [text]);\n    var getAttachmentsFromUploads = function () {\n        var imageAttachments = imageOrder\n            .map(function (id) { return imageUploads[id]; })\n            .filter(function (upload) { return upload.state !== 'failed'; })\n            .filter(function (_a, _, self) {\n            var id = _a.id, url = _a.url;\n            return self.every(function (upload) { return upload.id === id || upload.url !== url; });\n        })\n            .filter(function (upload) {\n            // keep the OG attachments in case the text has not changed as the BE\n            // won't re-enrich the message when only attachments have changed\n            if (!textReference.current.hasChanged)\n                return true;\n            return !upload.og_scrape_url;\n        })\n            .map(function (_a) {\n            var name = _a.file.name, url = _a.url, rest = __rest(_a, [\"file\", \"url\"]);\n            return ({\n                author_name: rest.author_name,\n                fallback: name,\n                image_url: url,\n                og_scrape_url: rest.og_scrape_url,\n                text: rest.text,\n                title: rest.title,\n                title_link: rest.title_link,\n                type: 'image',\n            });\n        });\n        var fileAttachments = fileOrder\n            .map(function (id) { return fileUploads[id]; })\n            .filter(function (upload) { return upload.state !== 'failed'; })\n            .map(function (upload) { return ({\n            asset_url: upload.url,\n            file_size: upload.file.size,\n            mime_type: upload.file.type,\n            thumb_url: upload.thumb_url,\n            title: upload.file.name,\n            type: getAttachmentTypeFromMime(upload.file.type || ''),\n        }); });\n        return __spreadArray(__spreadArray(__spreadArray([], attachments, true), imageAttachments, true), fileAttachments, true);\n    };\n    var handleSubmit = function (event, customMessageData) { return __awaiter(void 0, void 0, void 0, function () {\n        var trimmedMessage, isEmptyMessage, someAttachmentsUploading, attachmentsFromUploads, attachmentsFromLinkPreviews, someLinkPreviewsLoading, someLinkPreviewsDismissed, newAttachments, actualMentionedUsers, updatedMessage, linkPreviewsEnabled, skip_enrich_url, sendOptions, err_1, err_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    event.preventDefault();\n                    trimmedMessage = text.trim();\n                    isEmptyMessage = trimmedMessage === '' ||\n                        trimmedMessage === '>' ||\n                        trimmedMessage === '``````' ||\n                        trimmedMessage === '``' ||\n                        trimmedMessage === '**' ||\n                        trimmedMessage === '____' ||\n                        trimmedMessage === '__' ||\n                        trimmedMessage === '****';\n                    if (isEmptyMessage && numberOfUploads === 0)\n                        return [2 /*return*/];\n                    someAttachmentsUploading = Object.values(imageUploads).some(function (upload) { return upload.state === 'uploading'; }) ||\n                        Object.values(fileUploads).some(function (upload) { return upload.state === 'uploading'; });\n                    if (someAttachmentsUploading) {\n                        return [2 /*return*/, addNotification(t('Wait until all attachments have uploaded'), 'error')];\n                    }\n                    attachmentsFromUploads = getAttachmentsFromUploads();\n                    attachmentsFromLinkPreviews = [];\n                    if (findAndEnqueueURLsToEnrich) {\n                        // filter out all the attachments scraped before the message was edited - only if the scr\n                        attachmentsFromUploads = attachmentsFromUploads.filter(function (attachment) { return !attachment.og_scrape_url; });\n                        // prevent showing link preview in MessageInput after the message has been sent\n                        cancelURLEnrichment();\n                        someLinkPreviewsLoading = Array.from(linkPreviews.values()).some(function (linkPreview) {\n                            return [LinkPreviewState.QUEUED, LinkPreviewState.LOADING].includes(linkPreview.state);\n                        });\n                        someLinkPreviewsDismissed = Array.from(linkPreviews.values()).some(function (linkPreview) { return linkPreview.state === LinkPreviewState.DISMISSED; });\n                        if (!someLinkPreviewsLoading) {\n                            attachmentsFromLinkPreviews = Array.from(linkPreviews.values())\n                                .filter(function (linkPreview) {\n                                return linkPreview.state === LinkPreviewState.LOADED &&\n                                    !attachmentsFromUploads.find(function (attFromUpload) { return attFromUpload.og_scrape_url === linkPreview.og_scrape_url; });\n                            })\n                                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                                .map(function (_a) {\n                                var linkPreviewState = _a.state, ogAttachment = __rest(_a, [\"state\"]);\n                                return ogAttachment;\n                            });\n                        }\n                    }\n                    newAttachments = __spreadArray(__spreadArray([], attachmentsFromUploads, true), attachmentsFromLinkPreviews, true);\n                    actualMentionedUsers = Array.from(new Set(mentioned_users.filter(function (_a) {\n                        var id = _a.id, name = _a.name;\n                        return text.includes(\"@\".concat(id)) || text.includes(\"@\".concat(name));\n                    })));\n                    updatedMessage = {\n                        attachments: newAttachments,\n                        mentioned_users: actualMentionedUsers,\n                        text: text,\n                    };\n                    linkPreviewsEnabled = !!findAndEnqueueURLsToEnrich;\n                    skip_enrich_url = linkPreviewsEnabled &&\n                        ((!someLinkPreviewsLoading && attachmentsFromLinkPreviews.length > 0) ||\n                            someLinkPreviewsDismissed);\n                    sendOptions = linkPreviewsEnabled ? { skip_enrich_url: skip_enrich_url } : undefined;\n                    if (!message) return [3 /*break*/, 5];\n                    delete message.i18n;\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, editMessage(__assign(__assign(__assign({}, message), updatedMessage), customMessageData), sendOptions)];\n                case 2:\n                    _a.sent();\n                    clearEditingState === null || clearEditingState === void 0 ? void 0 : clearEditingState();\n                    dispatch({ type: 'clear' });\n                    return [3 /*break*/, 4];\n                case 3:\n                    err_1 = _a.sent();\n                    addNotification(t('Edit message request failed'), 'error');\n                    return [3 /*break*/, 4];\n                case 4: return [3 /*break*/, 13];\n                case 5:\n                    _a.trys.push([5, 12, , 13]);\n                    dispatch({ type: 'clear' });\n                    if (!overrideSubmitHandler) return [3 /*break*/, 7];\n                    return [4 /*yield*/, overrideSubmitHandler(__assign(__assign({}, updatedMessage), { parent: parent }), channel.cid, customMessageData, sendOptions)];\n                case 6:\n                    _a.sent();\n                    return [3 /*break*/, 9];\n                case 7: return [4 /*yield*/, sendMessage(__assign(__assign({}, updatedMessage), { parent: parent }), customMessageData, sendOptions)];\n                case 8:\n                    _a.sent();\n                    _a.label = 9;\n                case 9:\n                    if (!publishTypingEvent) return [3 /*break*/, 11];\n                    return [4 /*yield*/, channel.stopTyping()];\n                case 10:\n                    _a.sent();\n                    _a.label = 11;\n                case 11: return [3 /*break*/, 13];\n                case 12:\n                    err_2 = _a.sent();\n                    dispatch({\n                        getNewText: function () { return text; },\n                        type: 'setText',\n                    });\n                    actualMentionedUsers === null || actualMentionedUsers === void 0 ? void 0 : actualMentionedUsers.forEach(function (user) {\n                        dispatch({ type: 'addMentionedUser', user: user });\n                    });\n                    addNotification(t('Send message request failed'), 'error');\n                    return [3 /*break*/, 13];\n                case 13: return [2 /*return*/];\n            }\n        });\n    }); };\n    return { handleSubmit: handleSubmit };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}