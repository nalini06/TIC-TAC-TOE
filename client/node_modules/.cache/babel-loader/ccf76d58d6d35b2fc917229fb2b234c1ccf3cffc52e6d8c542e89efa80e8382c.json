{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport { MESSAGE_ACTIONS } from '../Message';\nimport { MessageInput, MessageInputFlat, MessageInputSmall } from '../MessageInput';\nimport { MessageList, VirtualizedMessageList } from '../MessageList';\nimport { ThreadHeader as DefaultThreadHeader } from './ThreadHeader';\nimport { ThreadHead as DefaultThreadHead } from '../Thread/ThreadHead';\nimport { useChannelActionContext, useChannelStateContext, useChatContext, useComponentContext } from '../../context';\n/**\n * The Thread component renders a parent Message with a list of replies\n */\nexport var Thread = function (props) {\n  var _a = useChannelStateContext('Thread'),\n    channel = _a.channel,\n    channelConfig = _a.channelConfig,\n    thread = _a.thread;\n  if (!thread || (channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.replies) === false) return null;\n  // The wrapper ensures a key variable is set and the component recreates on thread switch\n  return React.createElement(ThreadInner, __assign({}, props, {\n    key: \"thread-\".concat(thread.id, \"-\").concat(channel === null || channel === void 0 ? void 0 : channel.cid)\n  }));\n};\nvar ThreadInner = function (props) {\n  var _a, _b;\n  var additionalMessageInputProps = props.additionalMessageInputProps,\n    additionalMessageListProps = props.additionalMessageListProps,\n    additionalParentMessageProps = props.additionalParentMessageProps,\n    additionalVirtualizedMessageListProps = props.additionalVirtualizedMessageListProps,\n    _c = props.autoFocus,\n    autoFocus = _c === void 0 ? true : _c,\n    _d = props.enableDateSeparator,\n    enableDateSeparator = _d === void 0 ? false : _d,\n    _e = props.fullWidth,\n    fullWidth = _e === void 0 ? false : _e,\n    PropInput = props.Input,\n    PropMessage = props.Message,\n    _f = props.messageActions,\n    messageActions = _f === void 0 ? Object.keys(MESSAGE_ACTIONS) : _f,\n    virtualized = props.virtualized;\n  var _g = useChannelStateContext('Thread'),\n    thread = _g.thread,\n    threadHasMore = _g.threadHasMore,\n    threadLoadingMore = _g.threadLoadingMore,\n    threadMessages = _g.threadMessages,\n    threadSuppressAutoscroll = _g.threadSuppressAutoscroll;\n  var _h = useChannelActionContext('Thread'),\n    closeThread = _h.closeThread,\n    loadMoreThread = _h.loadMoreThread;\n  var _j = useChatContext('Thread'),\n    customClasses = _j.customClasses,\n    themeVersion = _j.themeVersion;\n  var _k = useComponentContext('Thread'),\n    ContextInput = _k.ThreadInput,\n    ContextMessage = _k.Message,\n    _l = _k.ThreadHead,\n    ThreadHead = _l === void 0 ? DefaultThreadHead : _l,\n    _m = _k.ThreadHeader,\n    ThreadHeader = _m === void 0 ? DefaultThreadHeader : _m,\n    VirtualMessage = _k.VirtualMessage;\n  var ThreadInput = (_b = (_a = PropInput !== null && PropInput !== void 0 ? PropInput : additionalMessageInputProps === null || additionalMessageInputProps === void 0 ? void 0 : additionalMessageInputProps.Input) !== null && _a !== void 0 ? _a : ContextInput) !== null && _b !== void 0 ? _b : themeVersion === '2' ? MessageInputFlat : MessageInputSmall;\n  var ThreadMessage = PropMessage || (additionalMessageListProps === null || additionalMessageListProps === void 0 ? void 0 : additionalMessageListProps.Message);\n  var FallbackMessage = virtualized && VirtualMessage ? VirtualMessage : ContextMessage;\n  var MessageUIComponent = ThreadMessage || FallbackMessage;\n  var ThreadMessageList = virtualized ? VirtualizedMessageList : MessageList;\n  useEffect(function () {\n    if ((thread === null || thread === void 0 ? void 0 : thread.id) && (thread === null || thread === void 0 ? void 0 : thread.reply_count)) {\n      loadMoreThread();\n    }\n  }, []);\n  if (!thread) return null;\n  var threadClass = (customClasses === null || customClasses === void 0 ? void 0 : customClasses.thread) || clsx('str-chat__thread-container str-chat__thread', {\n    'str-chat__thread--full': fullWidth,\n    'str-chat__thread--virtualized': virtualized\n  });\n  var head = React.createElement(ThreadHead, __assign({\n    key: thread.id,\n    message: thread,\n    Message: MessageUIComponent\n  }, additionalParentMessageProps));\n  return React.createElement(\"div\", {\n    className: threadClass\n  }, React.createElement(ThreadHeader, {\n    closeThread: closeThread,\n    thread: thread\n  }), React.createElement(ThreadMessageList, __assign({\n    disableDateSeparator: !enableDateSeparator,\n    hasMore: threadHasMore,\n    head: head,\n    loadingMore: threadLoadingMore,\n    loadMore: loadMoreThread,\n    Message: MessageUIComponent,\n    messageActions: messageActions,\n    messages: threadMessages || [],\n    suppressAutoscroll: threadSuppressAutoscroll,\n    threadList: true\n  }, virtualized ? additionalVirtualizedMessageListProps : additionalMessageListProps)), React.createElement(MessageInput, __assign({\n    focus: autoFocus,\n    Input: ThreadInput,\n    parent: thread,\n    publishTypingEvent: false\n  }, additionalMessageInputProps)));\n};","map":{"version":3,"names":["__assign","React","useEffect","clsx","MESSAGE_ACTIONS","MessageInput","MessageInputFlat","MessageInputSmall","MessageList","VirtualizedMessageList","ThreadHeader","DefaultThreadHeader","ThreadHead","DefaultThreadHead","useChannelActionContext","useChannelStateContext","useChatContext","useComponentContext","Thread","props","_a","channel","channelConfig","thread","replies","createElement","ThreadInner","key","concat","id","cid","_b","additionalMessageInputProps","additionalMessageListProps","additionalParentMessageProps","additionalVirtualizedMessageListProps","_c","autoFocus","_d","enableDateSeparator","_e","fullWidth","PropInput","Input","PropMessage","Message","_f","messageActions","Object","keys","virtualized","_g","threadHasMore","threadLoadingMore","threadMessages","threadSuppressAutoscroll","_h","closeThread","loadMoreThread","_j","customClasses","themeVersion","_k","ContextInput","ThreadInput","ContextMessage","_l","_m","VirtualMessage","ThreadMessage","FallbackMessage","MessageUIComponent","ThreadMessageList","reply_count","threadClass","head","message","className","disableDateSeparator","hasMore","loadingMore","loadMore","messages","suppressAutoscroll","threadList","focus","parent","publishTypingEvent"],"sources":["C:/Users/praka/OneDrive/Desktop/Tic-Tac-Toe/client/node_modules/stream-chat-react/dist/components/Thread/Thread.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport { MESSAGE_ACTIONS } from '../Message';\nimport { MessageInput, MessageInputFlat, MessageInputSmall, } from '../MessageInput';\nimport { MessageList, VirtualizedMessageList, } from '../MessageList';\nimport { ThreadHeader as DefaultThreadHeader } from './ThreadHeader';\nimport { ThreadHead as DefaultThreadHead } from '../Thread/ThreadHead';\nimport { useChannelActionContext, useChannelStateContext, useChatContext, useComponentContext, } from '../../context';\n/**\n * The Thread component renders a parent Message with a list of replies\n */\nexport var Thread = function (props) {\n    var _a = useChannelStateContext('Thread'), channel = _a.channel, channelConfig = _a.channelConfig, thread = _a.thread;\n    if (!thread || (channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.replies) === false)\n        return null;\n    // The wrapper ensures a key variable is set and the component recreates on thread switch\n    return React.createElement(ThreadInner, __assign({}, props, { key: \"thread-\".concat(thread.id, \"-\").concat(channel === null || channel === void 0 ? void 0 : channel.cid) }));\n};\nvar ThreadInner = function (props) {\n    var _a, _b;\n    var additionalMessageInputProps = props.additionalMessageInputProps, additionalMessageListProps = props.additionalMessageListProps, additionalParentMessageProps = props.additionalParentMessageProps, additionalVirtualizedMessageListProps = props.additionalVirtualizedMessageListProps, _c = props.autoFocus, autoFocus = _c === void 0 ? true : _c, _d = props.enableDateSeparator, enableDateSeparator = _d === void 0 ? false : _d, _e = props.fullWidth, fullWidth = _e === void 0 ? false : _e, PropInput = props.Input, PropMessage = props.Message, _f = props.messageActions, messageActions = _f === void 0 ? Object.keys(MESSAGE_ACTIONS) : _f, virtualized = props.virtualized;\n    var _g = useChannelStateContext('Thread'), thread = _g.thread, threadHasMore = _g.threadHasMore, threadLoadingMore = _g.threadLoadingMore, threadMessages = _g.threadMessages, threadSuppressAutoscroll = _g.threadSuppressAutoscroll;\n    var _h = useChannelActionContext('Thread'), closeThread = _h.closeThread, loadMoreThread = _h.loadMoreThread;\n    var _j = useChatContext('Thread'), customClasses = _j.customClasses, themeVersion = _j.themeVersion;\n    var _k = useComponentContext('Thread'), ContextInput = _k.ThreadInput, ContextMessage = _k.Message, _l = _k.ThreadHead, ThreadHead = _l === void 0 ? DefaultThreadHead : _l, _m = _k.ThreadHeader, ThreadHeader = _m === void 0 ? DefaultThreadHeader : _m, VirtualMessage = _k.VirtualMessage;\n    var ThreadInput = (_b = (_a = PropInput !== null && PropInput !== void 0 ? PropInput : additionalMessageInputProps === null || additionalMessageInputProps === void 0 ? void 0 : additionalMessageInputProps.Input) !== null && _a !== void 0 ? _a : ContextInput) !== null && _b !== void 0 ? _b : (themeVersion === '2' ? MessageInputFlat : MessageInputSmall);\n    var ThreadMessage = PropMessage || (additionalMessageListProps === null || additionalMessageListProps === void 0 ? void 0 : additionalMessageListProps.Message);\n    var FallbackMessage = virtualized && VirtualMessage ? VirtualMessage : ContextMessage;\n    var MessageUIComponent = ThreadMessage || FallbackMessage;\n    var ThreadMessageList = virtualized ? VirtualizedMessageList : MessageList;\n    useEffect(function () {\n        if ((thread === null || thread === void 0 ? void 0 : thread.id) && (thread === null || thread === void 0 ? void 0 : thread.reply_count)) {\n            loadMoreThread();\n        }\n    }, []);\n    if (!thread)\n        return null;\n    var threadClass = (customClasses === null || customClasses === void 0 ? void 0 : customClasses.thread) ||\n        clsx('str-chat__thread-container str-chat__thread', {\n            'str-chat__thread--full': fullWidth,\n            'str-chat__thread--virtualized': virtualized,\n        });\n    var head = (React.createElement(ThreadHead, __assign({ key: thread.id, message: thread, Message: MessageUIComponent }, additionalParentMessageProps)));\n    return (React.createElement(\"div\", { className: threadClass },\n        React.createElement(ThreadHeader, { closeThread: closeThread, thread: thread }),\n        React.createElement(ThreadMessageList, __assign({ disableDateSeparator: !enableDateSeparator, hasMore: threadHasMore, head: head, loadingMore: threadLoadingMore, loadMore: loadMoreThread, Message: MessageUIComponent, messageActions: messageActions, messages: threadMessages || [], suppressAutoscroll: threadSuppressAutoscroll, threadList: true }, (virtualized ? additionalVirtualizedMessageListProps : additionalMessageListProps))),\n        React.createElement(MessageInput, __assign({ focus: autoFocus, Input: ThreadInput, parent: thread, publishTypingEvent: false }, additionalMessageInputProps))));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}