{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React, { useContext } from 'react';\nexport var ChannelActionContext = React.createContext(undefined);\nexport var ChannelActionProvider = function (_a) {\n  var children = _a.children,\n    value = _a.value;\n  return React.createElement(ChannelActionContext.Provider, {\n    value: value\n  }, children);\n};\nexport var useChannelActionContext = function (componentName) {\n  var contextValue = useContext(ChannelActionContext);\n  if (!contextValue) {\n    console.warn(\"The useChannelActionContext hook was called outside of the ChannelActionContext provider. Make sure this hook is called within a child of the Channel component. The errored call is located in the \".concat(componentName, \" component.\"));\n    return {};\n  }\n  return contextValue;\n};\n/**\n * Typescript currently does not support partial inference, so if ChannelActionContext\n * typing is desired while using the HOC withChannelActionContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport var withChannelActionContext = function (Component) {\n  var WithChannelActionContextComponent = function (props) {\n    var channelActionContext = useChannelActionContext();\n    return React.createElement(Component, __assign({}, props, channelActionContext));\n  };\n  WithChannelActionContextComponent.displayName = (Component.displayName || Component.name || 'Component').replace('Base', '');\n  return WithChannelActionContextComponent;\n};","map":{"version":3,"names":["__assign","React","useContext","ChannelActionContext","createContext","undefined","ChannelActionProvider","_a","children","value","createElement","Provider","useChannelActionContext","componentName","contextValue","console","warn","concat","withChannelActionContext","Component","WithChannelActionContextComponent","props","channelActionContext","displayName","name","replace"],"sources":["C:/Users/praka/OneDrive/Desktop/Tic-Tac-Toe/client/node_modules/stream-chat-react/dist/context/ChannelActionContext.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport React, { useContext } from 'react';\nexport var ChannelActionContext = React.createContext(undefined);\nexport var ChannelActionProvider = function (_a) {\n    var children = _a.children, value = _a.value;\n    return (React.createElement(ChannelActionContext.Provider, { value: value }, children));\n};\nexport var useChannelActionContext = function (componentName) {\n    var contextValue = useContext(ChannelActionContext);\n    if (!contextValue) {\n        console.warn(\"The useChannelActionContext hook was called outside of the ChannelActionContext provider. Make sure this hook is called within a child of the Channel component. The errored call is located in the \".concat(componentName, \" component.\"));\n        return {};\n    }\n    return contextValue;\n};\n/**\n * Typescript currently does not support partial inference, so if ChannelActionContext\n * typing is desired while using the HOC withChannelActionContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport var withChannelActionContext = function (Component) {\n    var WithChannelActionContextComponent = function (props) {\n        var channelActionContext = useChannelActionContext();\n        return React.createElement(Component, __assign({}, props, channelActionContext));\n    };\n    WithChannelActionContextComponent.displayName = (Component.displayName ||\n        Component.name ||\n        'Component').replace('Base', '');\n    return WithChannelActionContextComponent;\n};\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAO,IAAIC,oBAAoB,GAAGF,KAAK,CAACG,aAAa,CAACC,SAAS,CAAC;AAChE,OAAO,IAAIC,qBAAqB,GAAG,SAAAA,CAAUC,EAAE,EAAE;EAC7C,IAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAQ;IAAEC,KAAK,GAAGF,EAAE,CAACE,KAAK;EAC5C,OAAQR,KAAK,CAACS,aAAa,CAACP,oBAAoB,CAACQ,QAAQ,EAAE;IAAEF,KAAK,EAAEA;EAAM,CAAC,EAAED,QAAQ,CAAC;AAC1F,CAAC;AACD,OAAO,IAAII,uBAAuB,GAAG,SAAAA,CAAUC,aAAa,EAAE;EAC1D,IAAIC,YAAY,GAAGZ,UAAU,CAACC,oBAAoB,CAAC;EACnD,IAAI,CAACW,YAAY,EAAE;IACfC,OAAO,CAACC,IAAI,CAAC,sMAAsM,CAACC,MAAM,CAACJ,aAAa,EAAE,aAAa,CAAC,CAAC;IACzP,OAAO,CAAC,CAAC;EACb;EACA,OAAOC,YAAY;AACvB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAII,wBAAwB,GAAG,SAAAA,CAAUC,SAAS,EAAE;EACvD,IAAIC,iCAAiC,GAAG,SAAAA,CAAUC,KAAK,EAAE;IACrD,IAAIC,oBAAoB,GAAGV,uBAAuB,CAAC,CAAC;IACpD,OAAOX,KAAK,CAACS,aAAa,CAACS,SAAS,EAAEnB,QAAQ,CAAC,CAAC,CAAC,EAAEqB,KAAK,EAAEC,oBAAoB,CAAC,CAAC;EACpF,CAAC;EACDF,iCAAiC,CAACG,WAAW,GAAG,CAACJ,SAAS,CAACI,WAAW,IAClEJ,SAAS,CAACK,IAAI,IACd,WAAW,EAAEC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;EACpC,OAAOL,iCAAiC;AAC5C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}