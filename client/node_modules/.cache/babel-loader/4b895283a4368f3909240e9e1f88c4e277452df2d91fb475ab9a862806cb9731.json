{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { useCallback, useEffect } from 'react';\nimport { checkUploadPermissions } from './utils';\nimport { useChannelActionContext } from '../../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useTranslationContext } from '../../../context/TranslationContext';\nexport var useFileUploads = function (props, state, dispatch) {\n  var doFileUploadRequest = props.doFileUploadRequest,\n    errorHandler = props.errorHandler;\n  var fileUploads = state.fileUploads;\n  var channel = useChannelStateContext('useFileUploads').channel;\n  var addNotification = useChannelActionContext('useFileUploads').addNotification;\n  var getAppSettings = useChatContext('useFileUploads').getAppSettings;\n  var t = useTranslationContext('useFileUploads').t;\n  var uploadFile = useCallback(function (id) {\n    dispatch({\n      id: id,\n      state: 'uploading',\n      type: 'setFileUpload'\n    });\n  }, []);\n  var removeFile = useCallback(function (id) {\n    // TODO: cancel upload if still uploading\n    dispatch({\n      id: id,\n      type: 'removeFileUpload'\n    });\n  }, []);\n  useEffect(function () {\n    (function () {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var upload, file, id, canUpload, response, error_1, errorMessage, alreadyRemoved;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              upload = Object.values(fileUploads).find(function (fileUpload) {\n                return fileUpload.state === 'uploading' && fileUpload.file;\n              });\n              if (!upload) return [2 /*return*/];\n              file = upload.file, id = upload.id;\n              return [4 /*yield*/, checkUploadPermissions({\n                addNotification: addNotification,\n                file: file,\n                getAppSettings: getAppSettings,\n                t: t,\n                uploadType: 'file'\n              })];\n            case 1:\n              canUpload = _a.sent();\n              if (!canUpload) return [2 /*return*/, removeFile(id)];\n              _a.label = 2;\n            case 2:\n              _a.trys.push([2, 7,, 8]);\n              if (!doFileUploadRequest) return [3 /*break*/, 4];\n              return [4 /*yield*/, doFileUploadRequest(file, channel)];\n            case 3:\n              response = _a.sent();\n              return [3 /*break*/, 6];\n            case 4:\n              return [4 /*yield*/, channel.sendFile(file)];\n            case 5:\n              response = _a.sent();\n              _a.label = 6;\n            case 6:\n              return [3 /*break*/, 8];\n            case 7:\n              error_1 = _a.sent();\n              errorMessage = typeof error_1.message === 'string' ? error_1.message : t('Error uploading file');\n              addNotification(errorMessage, 'error');\n              alreadyRemoved = false;\n              if (!fileUploads[id]) {\n                alreadyRemoved = true;\n              } else {\n                dispatch({\n                  id: id,\n                  state: 'failed',\n                  type: 'setFileUpload'\n                });\n              }\n              if (!alreadyRemoved && errorHandler) {\n                // TODO: verify if the parameters passed to the error handler actually make sense\n                errorHandler(error_1, 'upload-file', file);\n              }\n              return [2 /*return*/];\n            case 8:\n              // If doImageUploadRequest returns any falsy value, then don't create the upload preview.\n              // This is for the case if someone wants to handle failure on app level.\n              if (!response) {\n                removeFile(id);\n                return [2 /*return*/];\n              }\n\n              dispatch({\n                id: id,\n                state: 'finished',\n                thumb_url: response.thumb_url,\n                type: 'setFileUpload',\n                url: response.file\n              });\n              return [2 /*return*/];\n          }\n        });\n      });\n    })();\n  }, [fileUploads, channel, doFileUploadRequest, errorHandler, removeFile]);\n  return {\n    removeFile: removeFile,\n    uploadFile: uploadFile\n  };\n};","map":{"version":3,"names":["__awaiter","__generator","useCallback","useEffect","checkUploadPermissions","useChannelActionContext","useChannelStateContext","useChatContext","useTranslationContext","useFileUploads","props","state","dispatch","doFileUploadRequest","errorHandler","fileUploads","channel","addNotification","getAppSettings","t","uploadFile","id","type","removeFile","upload","file","canUpload","response","error_1","errorMessage","alreadyRemoved","_a","label","Object","values","find","fileUpload","uploadType","sent","trys","push","sendFile","message","thumb_url","url"],"sources":["C:/Users/praka/OneDrive/Desktop/Tic-Tac-Toe/client/node_modules/stream-chat-react/dist/components/MessageInput/hooks/useFileUploads.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { useCallback, useEffect } from 'react';\nimport { checkUploadPermissions } from './utils';\nimport { useChannelActionContext } from '../../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useTranslationContext } from '../../../context/TranslationContext';\nexport var useFileUploads = function (props, state, dispatch) {\n    var doFileUploadRequest = props.doFileUploadRequest, errorHandler = props.errorHandler;\n    var fileUploads = state.fileUploads;\n    var channel = useChannelStateContext('useFileUploads').channel;\n    var addNotification = useChannelActionContext('useFileUploads').addNotification;\n    var getAppSettings = useChatContext('useFileUploads').getAppSettings;\n    var t = useTranslationContext('useFileUploads').t;\n    var uploadFile = useCallback(function (id) {\n        dispatch({ id: id, state: 'uploading', type: 'setFileUpload' });\n    }, []);\n    var removeFile = useCallback(function (id) {\n        // TODO: cancel upload if still uploading\n        dispatch({ id: id, type: 'removeFileUpload' });\n    }, []);\n    useEffect(function () {\n        (function () { return __awaiter(void 0, void 0, void 0, function () {\n            var upload, file, id, canUpload, response, error_1, errorMessage, alreadyRemoved;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        upload = Object.values(fileUploads).find(function (fileUpload) { return fileUpload.state === 'uploading' && fileUpload.file; });\n                        if (!upload)\n                            return [2 /*return*/];\n                        file = upload.file, id = upload.id;\n                        return [4 /*yield*/, checkUploadPermissions({\n                                addNotification: addNotification,\n                                file: file,\n                                getAppSettings: getAppSettings,\n                                t: t,\n                                uploadType: 'file',\n                            })];\n                    case 1:\n                        canUpload = _a.sent();\n                        if (!canUpload)\n                            return [2 /*return*/, removeFile(id)];\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 7, , 8]);\n                        if (!doFileUploadRequest) return [3 /*break*/, 4];\n                        return [4 /*yield*/, doFileUploadRequest(file, channel)];\n                    case 3:\n                        response = _a.sent();\n                        return [3 /*break*/, 6];\n                    case 4: return [4 /*yield*/, channel.sendFile(file)];\n                    case 5:\n                        response = _a.sent();\n                        _a.label = 6;\n                    case 6: return [3 /*break*/, 8];\n                    case 7:\n                        error_1 = _a.sent();\n                        errorMessage = typeof error_1.message === 'string'\n                            ? error_1.message\n                            : t('Error uploading file');\n                        addNotification(errorMessage, 'error');\n                        alreadyRemoved = false;\n                        if (!fileUploads[id]) {\n                            alreadyRemoved = true;\n                        }\n                        else {\n                            dispatch({ id: id, state: 'failed', type: 'setFileUpload' });\n                        }\n                        if (!alreadyRemoved && errorHandler) {\n                            // TODO: verify if the parameters passed to the error handler actually make sense\n                            errorHandler(error_1, 'upload-file', file);\n                        }\n                        return [2 /*return*/];\n                    case 8:\n                        // If doImageUploadRequest returns any falsy value, then don't create the upload preview.\n                        // This is for the case if someone wants to handle failure on app level.\n                        if (!response) {\n                            removeFile(id);\n                            return [2 /*return*/];\n                        }\n                        dispatch({\n                            id: id,\n                            state: 'finished',\n                            thumb_url: response.thumb_url,\n                            type: 'setFileUpload',\n                            url: response.file,\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        }); })();\n    }, [fileUploads, channel, doFileUploadRequest, errorHandler, removeFile]);\n    return {\n        removeFile: removeFile,\n        uploadFile: uploadFile,\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}