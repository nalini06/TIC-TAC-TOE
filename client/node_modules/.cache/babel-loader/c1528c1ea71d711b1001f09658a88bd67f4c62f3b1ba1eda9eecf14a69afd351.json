{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { useCallback, useEffect } from 'react';\nimport { checkUploadPermissions } from './utils';\nimport { useChannelActionContext } from '../../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useTranslationContext } from '../../../context/TranslationContext';\nexport var useImageUploads = function (props, state, dispatch) {\n  var doImageUploadRequest = props.doImageUploadRequest,\n    errorHandler = props.errorHandler;\n  var imageUploads = state.imageUploads;\n  var channel = useChannelStateContext('useImageUploads').channel;\n  var getAppSettings = useChatContext('useImageUploads').getAppSettings;\n  var addNotification = useChannelActionContext('useImageUploads').addNotification;\n  var t = useTranslationContext('useImageUploads').t;\n  var removeImage = useCallback(function (id) {\n    dispatch({\n      id: id,\n      type: 'removeImageUpload'\n    });\n    // TODO: cancel upload if still uploading\n  }, []);\n  var uploadImage = useCallback(function (id) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var img, file, canUpload, response, error_1, errorMessage, alreadyRemoved;\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            img = imageUploads[id];\n            if (!img) return [2 /*return*/];\n            file = img.file;\n            if (img.state !== 'uploading') {\n              dispatch({\n                id: id,\n                state: 'uploading',\n                type: 'setImageUpload'\n              });\n            }\n            return [4 /*yield*/, checkUploadPermissions({\n              addNotification: addNotification,\n              file: file,\n              getAppSettings: getAppSettings,\n              t: t,\n              uploadType: 'image'\n            })];\n          case 1:\n            canUpload = _b.sent();\n            if (!canUpload) return [2 /*return*/, removeImage(id)];\n            _b.label = 2;\n          case 2:\n            _b.trys.push([2, 7,, 8]);\n            if (!doImageUploadRequest) return [3 /*break*/, 4];\n            return [4 /*yield*/, doImageUploadRequest(file, channel)];\n          case 3:\n            response = _b.sent();\n            return [3 /*break*/, 6];\n          case 4:\n            return [4 /*yield*/, channel.sendImage(file)];\n          case 5:\n            response = _b.sent();\n            _b.label = 6;\n          case 6:\n            return [3 /*break*/, 8];\n          case 7:\n            error_1 = _b.sent();\n            errorMessage = typeof error_1.message === 'string' ? error_1.message : t('Error uploading image');\n            addNotification(errorMessage, 'error');\n            alreadyRemoved = false;\n            if (!imageUploads[id]) {\n              alreadyRemoved = true;\n            } else {\n              dispatch({\n                id: id,\n                state: 'failed',\n                type: 'setImageUpload'\n              });\n            }\n            if (!alreadyRemoved && errorHandler) {\n              // TODO: verify if the parameters passed to the error handler actually make sense\n              errorHandler(error_1, 'upload-image', __assign(__assign({}, file), {\n                id: id\n              }));\n            }\n            return [2 /*return*/];\n          case 8:\n            // If doImageUploadRequest returns any falsy value, then don't create the upload preview.\n            // This is for the case if someone wants to handle failure on app level.\n            if (!response) {\n              removeImage(id);\n              return [2 /*return*/];\n            }\n\n            if (img.previewUri) (_a = URL.revokeObjectURL) === null || _a === void 0 ? void 0 : _a.call(URL, img.previewUri);\n            dispatch({\n              id: id,\n              previewUri: undefined,\n              state: 'finished',\n              type: 'setImageUpload',\n              url: response.file\n            });\n            return [2 /*return*/];\n        }\n      });\n    });\n  }, [imageUploads, channel, doImageUploadRequest, errorHandler, removeImage]);\n  useEffect(function () {\n    var upload = Object.values(imageUploads).find(function (imageUpload) {\n      return imageUpload.state === 'uploading' && imageUpload.file;\n    });\n    if (!upload) return;\n    uploadImage(upload.id);\n  }, [imageUploads, uploadImage]);\n  return {\n    removeImage: removeImage,\n    uploadImage: uploadImage\n  };\n};","map":{"version":3,"names":["__assign","__awaiter","__generator","useCallback","useEffect","checkUploadPermissions","useChannelActionContext","useChannelStateContext","useChatContext","useTranslationContext","useImageUploads","props","state","dispatch","doImageUploadRequest","errorHandler","imageUploads","channel","getAppSettings","addNotification","t","removeImage","id","type","uploadImage","img","file","canUpload","response","error_1","errorMessage","alreadyRemoved","_a","_b","label","uploadType","sent","trys","push","sendImage","message","previewUri","URL","revokeObjectURL","call","undefined","url","upload","Object","values","find","imageUpload"],"sources":["C:/Users/praka/OneDrive/Desktop/Tic-Tac-Toe/client/node_modules/stream-chat-react/dist/components/MessageInput/hooks/useImageUploads.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { useCallback, useEffect } from 'react';\nimport { checkUploadPermissions } from './utils';\nimport { useChannelActionContext } from '../../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useTranslationContext } from '../../../context/TranslationContext';\nexport var useImageUploads = function (props, state, dispatch) {\n    var doImageUploadRequest = props.doImageUploadRequest, errorHandler = props.errorHandler;\n    var imageUploads = state.imageUploads;\n    var channel = useChannelStateContext('useImageUploads').channel;\n    var getAppSettings = useChatContext('useImageUploads').getAppSettings;\n    var addNotification = useChannelActionContext('useImageUploads').addNotification;\n    var t = useTranslationContext('useImageUploads').t;\n    var removeImage = useCallback(function (id) {\n        dispatch({ id: id, type: 'removeImageUpload' });\n        // TODO: cancel upload if still uploading\n    }, []);\n    var uploadImage = useCallback(function (id) { return __awaiter(void 0, void 0, void 0, function () {\n        var img, file, canUpload, response, error_1, errorMessage, alreadyRemoved;\n        var _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    img = imageUploads[id];\n                    if (!img)\n                        return [2 /*return*/];\n                    file = img.file;\n                    if (img.state !== 'uploading') {\n                        dispatch({ id: id, state: 'uploading', type: 'setImageUpload' });\n                    }\n                    return [4 /*yield*/, checkUploadPermissions({\n                            addNotification: addNotification,\n                            file: file,\n                            getAppSettings: getAppSettings,\n                            t: t,\n                            uploadType: 'image',\n                        })];\n                case 1:\n                    canUpload = _b.sent();\n                    if (!canUpload)\n                        return [2 /*return*/, removeImage(id)];\n                    _b.label = 2;\n                case 2:\n                    _b.trys.push([2, 7, , 8]);\n                    if (!doImageUploadRequest) return [3 /*break*/, 4];\n                    return [4 /*yield*/, doImageUploadRequest(file, channel)];\n                case 3:\n                    response = _b.sent();\n                    return [3 /*break*/, 6];\n                case 4: return [4 /*yield*/, channel.sendImage(file)];\n                case 5:\n                    response = _b.sent();\n                    _b.label = 6;\n                case 6: return [3 /*break*/, 8];\n                case 7:\n                    error_1 = _b.sent();\n                    errorMessage = typeof error_1.message === 'string'\n                        ? error_1.message\n                        : t('Error uploading image');\n                    addNotification(errorMessage, 'error');\n                    alreadyRemoved = false;\n                    if (!imageUploads[id]) {\n                        alreadyRemoved = true;\n                    }\n                    else {\n                        dispatch({ id: id, state: 'failed', type: 'setImageUpload' });\n                    }\n                    if (!alreadyRemoved && errorHandler) {\n                        // TODO: verify if the parameters passed to the error handler actually make sense\n                        errorHandler(error_1, 'upload-image', __assign(__assign({}, file), { id: id }));\n                    }\n                    return [2 /*return*/];\n                case 8:\n                    // If doImageUploadRequest returns any falsy value, then don't create the upload preview.\n                    // This is for the case if someone wants to handle failure on app level.\n                    if (!response) {\n                        removeImage(id);\n                        return [2 /*return*/];\n                    }\n                    if (img.previewUri)\n                        (_a = URL.revokeObjectURL) === null || _a === void 0 ? void 0 : _a.call(URL, img.previewUri);\n                    dispatch({\n                        id: id,\n                        previewUri: undefined,\n                        state: 'finished',\n                        type: 'setImageUpload',\n                        url: response.file,\n                    });\n                    return [2 /*return*/];\n            }\n        });\n    }); }, [imageUploads, channel, doImageUploadRequest, errorHandler, removeImage]);\n    useEffect(function () {\n        var upload = Object.values(imageUploads).find(function (imageUpload) { return imageUpload.state === 'uploading' && imageUpload.file; });\n        if (!upload)\n            return;\n        uploadImage(upload.id);\n    }, [imageUploads, uploadImage]);\n    return {\n        removeImage: removeImage,\n        uploadImage: uploadImage,\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}