{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport i18n from 'i18next';\nimport Dayjs from 'dayjs';\nimport calendar from 'dayjs/plugin/calendar';\nimport updateLocale from 'dayjs/plugin/updateLocale';\nimport LocalizedFormat from 'dayjs/plugin/localizedFormat';\nimport localeData from 'dayjs/plugin/localeData';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport { deTranslations, enTranslations, esTranslations, frTranslations, hiTranslations, itTranslations, jaTranslations, koTranslations, nlTranslations, ptTranslations, ruTranslations, trTranslations } from './translations';\nvar defaultNS = 'translation';\nvar defaultLng = 'en';\nimport 'dayjs/locale/de';\nimport 'dayjs/locale/es';\nimport 'dayjs/locale/fr';\nimport 'dayjs/locale/hi';\nimport 'dayjs/locale/it';\nimport 'dayjs/locale/ja';\nimport 'dayjs/locale/ko';\nimport 'dayjs/locale/nl';\nimport 'dayjs/locale/pt';\nimport 'dayjs/locale/ru';\nimport 'dayjs/locale/tr';\n// These locale imports also set these locale globally.\n// So As a last step I am going to import english locale\n// to make sure I don't mess up language at other places in app.\nimport 'dayjs/locale/en';\nDayjs.extend(updateLocale);\nDayjs.extend(utc);\nDayjs.extend(timezone);\nDayjs.updateLocale('de', {\n  calendar: {\n    lastDay: '[gestern um] LT',\n    lastWeek: '[letzten] dddd [um] LT',\n    nextDay: '[morgen um] LT',\n    nextWeek: 'dddd [um] LT',\n    sameDay: '[heute um] LT',\n    sameElse: 'L'\n  }\n});\nDayjs.updateLocale('es', {\n  calendar: {\n    lastDay: '[ayer a las] LT',\n    lastWeek: '[pasado] dddd [a] LT',\n    nextDay: '[mañana a] LT',\n    nextWeek: 'dddd [a] LT',\n    sameDay: '[hoy a las] LT',\n    sameElse: 'L'\n  }\n});\nDayjs.updateLocale('fr', {\n  calendar: {\n    lastDay: '[Hier à] LT',\n    lastWeek: 'dddd [dernier à] LT',\n    nextDay: '[Demain à] LT',\n    nextWeek: 'dddd [à] LT',\n    sameDay: '[Aujourd’hui à] LT',\n    sameElse: 'L'\n  }\n});\nDayjs.updateLocale('hi', {\n  calendar: {\n    lastDay: '[कल] LT',\n    lastWeek: '[पिछले] dddd, LT',\n    nextDay: '[कल] LT',\n    nextWeek: 'dddd, LT',\n    sameDay: '[आज] LT',\n    sameElse: 'L'\n  },\n  // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n  meridiem: function (hour) {\n    if (hour < 4) {\n      return 'रात';\n    } else if (hour < 10) {\n      return 'सुबह';\n    } else if (hour < 17) {\n      return 'दोपहर';\n    } else if (hour < 20) {\n      return 'शाम';\n    } else {\n      return 'रात';\n    }\n  },\n  meridiemHour: function (hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'रात') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'सुबह') {\n      return hour;\n    } else if (meridiem === 'दोपहर') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'शाम') {\n      return hour + 12;\n    }\n    return hour;\n  },\n  meridiemParse: /रात|सुबह|दोपहर|शाम/\n});\nDayjs.updateLocale('it', {\n  calendar: {\n    lastDay: '[Ieri alle] LT',\n    lastWeek: '[lo scorso] dddd [alle] LT',\n    nextDay: '[Domani alle] LT',\n    nextWeek: 'dddd [alle] LT',\n    sameDay: '[Oggi alle] LT',\n    sameElse: 'L'\n  }\n});\nDayjs.updateLocale('ja', {\n  calendar: {\n    lastDay: '[昨日] LT',\n    lastWeek: 'dddd LT',\n    nextDay: '[明日] LT',\n    nextWeek: '[次の] dddd LT',\n    sameDay: '[今日] LT',\n    sameElse: 'L'\n  }\n});\nDayjs.updateLocale('ko', {\n  calendar: {\n    lastDay: '[어제] LT',\n    lastWeek: '[지난] dddd LT',\n    nextDay: '[내일] LT',\n    nextWeek: 'dddd LT',\n    sameDay: '[오늘] LT',\n    sameElse: 'L'\n  }\n});\nDayjs.updateLocale('nl', {\n  calendar: {\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    sameDay: '[vandaag om] LT',\n    sameElse: 'L'\n  }\n});\nDayjs.updateLocale('pt', {\n  calendar: {\n    lastDay: '[ontem às] LT',\n    lastWeek: 'dddd [passada às] LT',\n    nextDay: '[amanhã às] LT',\n    nextWeek: 'dddd [às] LT',\n    sameDay: '[hoje às] LT',\n    sameElse: 'L'\n  }\n});\nDayjs.updateLocale('ru', {\n  calendar: {\n    lastDay: '[Вчера, в] LT',\n    nextDay: '[Завтра, в] LT',\n    sameDay: '[Сегодня, в] LT'\n  }\n});\nDayjs.updateLocale('tr', {\n  calendar: {\n    lastDay: '[dün] LT',\n    lastWeek: '[geçen] dddd [saat] LT',\n    nextDay: '[yarın saat] LT',\n    nextWeek: '[gelecek] dddd [saat] LT',\n    sameDay: '[bugün saat] LT',\n    sameElse: 'L'\n  }\n});\nvar en_locale = {\n  formats: {},\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  relativeTime: {},\n  weekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\n// Type guards to check DayJs\nvar isDayJs = function (dateTimeParser) {\n  return dateTimeParser.extend !== undefined;\n};\nvar supportsTz = function (dateTimeParser) {\n  return dateTimeParser.tz !== undefined;\n};\n/**\n * Wrapper around [i18next](https://www.i18next.com/) class for Stream related translations.\n * Instance of this class should be provided to Chat component to handle translations.\n * Stream provides following list of in-built translations:\n * 1. English (en)\n * 2. Dutch (nl)\n * 3. Russian (ru)\n * 4. Turkish (tr)\n * 5. French (fr)\n * 6. Italian (it)\n * 7. Hindi (hi)\n * 8. Spanish (es)\n * 9. Portuguese (pt)\n * 10. German (de)\n * 11. Japanese (ja)\n * 12. Korean (ko)\n *\n * Simplest way to start using chat components in one of the in-built languages would be following:\n *\n * ```\n * const i18n = new Streami18n({ language 'nl' });\n * <Chat client={chatClient} i18nInstance={i18n}>\n *  ...\n * </Chat>\n * ```\n *\n * If you would like to override certain keys in in-built translation.\n * UI will be automatically updated in this case.\n *\n * ```\n * const i18n = new Streami18n({\n *  language: 'nl',\n *  translationsForLanguage: {\n *    'Nothing yet...': 'Nog Niet ...',\n *    '{{ firstUser }} and {{ secondUser }} are typing...': '{{ firstUser }} en {{ secondUser }} zijn aan het typen...',\n *  }\n * });\n *\n * If you would like to register additional languages, use registerTranslation. You can add as many languages as you want:\n *\n * i18n.registerTranslation('zh', {\n *  'Nothing yet...': 'Nog Niet ...',\n *  '{{ firstUser }} and {{ secondUser }} are typing...': '{{ firstUser }} en {{ secondUser }} zijn aan het typen...',\n * });\n *\n * <Chat client={chatClient} i18nInstance={i18n}>\n *  ...\n * </Chat>\n * ```\n *\n * You can use the same function to add whole new language as well.\n *\n * ```\n * const i18n = new Streami18n();\n *\n * i18n.registerTranslation('mr', {\n *  'Nothing yet...': 'काहीही नाही  ...',\n *  '{{ firstUser }} and {{ secondUser }} are typing...': '{{ firstUser }} आणि {{ secondUser }} टीपी करत आहेत ',\n * });\n *\n * // Make sure to call setLanguage to reflect new language in UI.\n * i18n.setLanguage('it');\n * <Chat client={chatClient} i18nInstance={i18n}>\n *  ...\n * </Chat>\n * ```\n *\n * ## Datetime translations\n *\n * Stream react chat components uses [dayjs](https://day.js.org/en/) internally by default to format datetime stamp.\n * e.g., in ChannelPreview, MessageContent components.\n * Dayjs has locale support as well - https://day.js.org/docs/en/i18n/i18n\n * Dayjs is a lightweight alternative to Momentjs with the same modern API.\n *\n * Dayjs provides locale config for plenty of languages, you can check the whole list of locale configs at following url\n * https://github.com/iamkun/dayjs/tree/dev/src/locale\n *\n * You can either provide the dayjs locale config while registering\n * language with Streami18n (either via constructor or registerTranslation()) or you can provide your own Dayjs or Moment instance\n * to Streami18n constructor, which will be then used internally (using the language locale) in components.\n *\n * 1. Via language registration\n *\n * e.g.,\n * ```\n * const i18n = new Streami18n({\n *  language: 'nl',\n *  dayjsLocaleConfigForLanguage: {\n *    months: [...],\n *    monthsShort: [...],\n *    calendar: {\n *      sameDay: ...'\n *    }\n *  }\n * });\n * ```\n *\n * Similarly, you can add locale config for moment while registering translation via `registerTranslation` function.\n *\n * e.g.,\n * ```\n * const i18n = new Streami18n();\n *\n * i18n.registerTranslation(\n *  'mr',\n *  {\n *    'Nothing yet...': 'काहीही नाही  ...',\n *    '{{ firstUser }} and {{ secondUser }} are typing...': '{{ firstUser }} आणि {{ secondUser }} टीपी करत आहेत ',\n *  },\n *  {\n *    months: [...],\n *    monthsShort: [...],\n *    calendar: {\n *      sameDay: ...'\n *    }\n *  }\n * );\n *```\n * 2. Provide your own Moment object\n *\n * ```js\n * import 'moment/locale/nl';\n * import 'moment/locale/it';\n * // or if you want to include all locales\n * import 'moment/min/locales';\n *\n * import Moment from moment\n *\n * const i18n = new Streami18n({\n *  language: 'nl',\n *  DateTimeParser: Moment\n * })\n * ```\n *\n * 3. Provide your own Dayjs object\n *\n * ```js\n * import Dayjs from 'dayjs'\n *\n * import 'dayjs/locale/nl';\n * import 'dayjs/locale/it';\n * // or if you want to include all locales\n * import 'dayjs/min/locales';\n *\n * const i18n = new Streami18n({\n *  language: 'nl',\n *  DateTimeParser: Dayjs\n * })\n * ```\n * If you would like to stick with english language for datetimes in Stream components, you can set `disableDateTimeTranslations` to true.\n *\n */\nvar defaultStreami18nOptions = {\n  DateTimeParser: Dayjs,\n  dayjsLocaleConfigForLanguage: null,\n  debug: false,\n  disableDateTimeTranslations: false,\n  language: 'en',\n  logger: function (message) {\n    return console.warn(message);\n  }\n};\nexport var defaultTranslatorFunction = function (key) {\n  return key;\n};\nvar Streami18n = /** @class */function () {\n  /**\n   * Constructor accepts following options:\n   *  - language (String) default: 'en'\n   *    Language code e.g., en, tr\n   *\n   *  - translationsForLanguage (object)\n   *    Translations object. Please check src/i18n/en.json for example.\n   *\n   *  - disableDateTimeTranslations (boolean) default: false\n   *    Disable translations for date-times\n   *\n   *  - debug (boolean) default: false\n   *    Enable debug mode in internal i18n class\n   *\n   *  - logger (function) default: () => {}\n   *    Logger function to log warnings/errors from this class\n   *\n   *  - dayjsLocaleConfigForLanguage (object) default: 'enConfig'\n   *    [Config object](https://momentjs.com/docs/#/i18n/changing-locale/) for internal moment object,\n   *    corresponding to language (param)\n   *\n   *  - DateTimeParser (function) Moment or Dayjs instance/function.\n   *    Make sure to load all the required locales in this Moment or Dayjs instance that you will be provide to Streami18n\n   *\n   * @param {*} options\n   */\n  function Streami18n(options) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n    if (options === void 0) {\n      options = {};\n    }\n    var _this = this;\n    this.i18nInstance = i18n.createInstance();\n    this.Dayjs = null;\n    this.setLanguageCallback = function () {\n      return null;\n    };\n    this.initialized = false;\n    this.t = defaultTranslatorFunction;\n    this.translations = {\n      de: (_a = {}, _a[defaultNS] = deTranslations, _a),\n      en: (_b = {}, _b[defaultNS] = enTranslations, _b),\n      es: (_c = {}, _c[defaultNS] = esTranslations, _c),\n      fr: (_d = {}, _d[defaultNS] = frTranslations, _d),\n      hi: (_e = {}, _e[defaultNS] = hiTranslations, _e),\n      it: (_f = {}, _f[defaultNS] = itTranslations, _f),\n      ja: (_g = {}, _g[defaultNS] = jaTranslations, _g),\n      ko: (_h = {}, _h[defaultNS] = koTranslations, _h),\n      nl: (_j = {}, _j[defaultNS] = nlTranslations, _j),\n      pt: (_k = {}, _k[defaultNS] = ptTranslations, _k),\n      ru: (_l = {}, _l[defaultNS] = ruTranslations, _l),\n      tr: (_m = {}, _m[defaultNS] = trTranslations, _m)\n    };\n    /**\n     * dayjs.defineLanguage('nl') also changes the global locale. We don't want to do that\n     * when user calls registerTranslation() function. So instead we will store the locale configs\n     * given to registerTranslation() function in `dayjsLocales` object, and register the required locale\n     * with moment, when setLanguage is called.\n     * */\n    this.dayjsLocales = {};\n    this.localeExists = function (language) {\n      if (_this.isCustomDateTimeParser) return true;\n      return Object.keys(Dayjs.Ls).indexOf(language) > -1;\n    };\n    this.validateCurrentLanguage = function () {\n      var availableLanguages = Object.keys(_this.translations);\n      if (availableLanguages.indexOf(_this.currentLanguage) === -1) {\n        _this.logger(\"Streami18n: '\".concat(_this.currentLanguage, \"' language is not registered.\") + \" Please make sure to call streami18n.registerTranslation('\".concat(_this.currentLanguage, \"', {...}) or \") + \"use one the built-in supported languages - \".concat(_this.getAvailableLanguages()));\n        _this.currentLanguage = defaultLng;\n      }\n    };\n    /** Returns an instance of i18next used within this class instance */\n    this.geti18Instance = function () {\n      return _this.i18nInstance;\n    };\n    /** Returns list of available languages. */\n    this.getAvailableLanguages = function () {\n      return Object.keys(_this.translations);\n    };\n    /** Returns all the translation dictionary for all inbuilt-languages */\n    this.getTranslations = function () {\n      return _this.translations;\n    };\n    var finalOptions = __assign(__assign({}, defaultStreami18nOptions), options);\n    // Prepare the i18next configuration.\n    this.logger = finalOptions.logger;\n    this.currentLanguage = finalOptions.language;\n    this.DateTimeParser = finalOptions.DateTimeParser;\n    this.timezone = finalOptions.timezone;\n    try {\n      if (this.DateTimeParser && isDayJs(this.DateTimeParser)) {\n        this.DateTimeParser.extend(LocalizedFormat);\n        this.DateTimeParser.extend(calendar);\n        this.DateTimeParser.extend(localeData);\n        this.DateTimeParser.extend(relativeTime);\n      }\n    } catch (error) {\n      throw Error(\"Streami18n: Looks like you wanted to provide Dayjs instance, but something went wrong while adding plugins \".concat(error));\n    }\n    this.isCustomDateTimeParser = !!options.DateTimeParser;\n    var translationsForLanguage = finalOptions.translationsForLanguage;\n    if (translationsForLanguage) {\n      this.translations[this.currentLanguage] = (_o = {}, _o[defaultNS] = this.translations[this.currentLanguage] && this.translations[this.currentLanguage][defaultNS] ? __assign(__assign({}, this.translations[this.currentLanguage][defaultNS]), translationsForLanguage) : translationsForLanguage, _o);\n    }\n    // If translations don't exist for given language, then set it as empty object.\n    if (!this.translations[this.currentLanguage]) {\n      this.translations[this.currentLanguage] = (_p = {}, _p[defaultNS] = {}, _p);\n    }\n    this.i18nextConfig = {\n      debug: finalOptions.debug,\n      fallbackLng: false,\n      interpolation: {\n        escapeValue: false\n      },\n      keySeparator: false,\n      lng: this.currentLanguage,\n      nsSeparator: false,\n      parseMissingKeyHandler: function (key) {\n        _this.logger(\"Streami18n: Missing translation for key: \".concat(key));\n        return key;\n      }\n    };\n    this.validateCurrentLanguage();\n    var dayjsLocaleConfigForLanguage = finalOptions.dayjsLocaleConfigForLanguage;\n    if (dayjsLocaleConfigForLanguage) {\n      this.addOrUpdateLocale(this.currentLanguage, __assign({}, dayjsLocaleConfigForLanguage));\n    } else if (!this.localeExists(this.currentLanguage)) {\n      this.logger(\"Streami18n: Streami18n(...) - Locale config for \".concat(this.currentLanguage, \" does not exist in momentjs.\") + \"Please import the locale file using \\\"import 'moment/locale/\".concat(this.currentLanguage, \"';\\\" in your app or \") + \"register the locale config with Streami18n using registerTranslation(language, translation, customDayjsLocale)\");\n    }\n    this.tDateTimeParser = function (timestamp) {\n      var language = finalOptions.disableDateTimeTranslations || !_this.localeExists(_this.currentLanguage) ? defaultLng : _this.currentLanguage;\n      if (isDayJs(_this.DateTimeParser)) {\n        return supportsTz(_this.DateTimeParser) ? _this.DateTimeParser(timestamp).tz(_this.timezone).locale(language) : _this.DateTimeParser(timestamp).locale(language);\n      }\n      if (supportsTz(_this.DateTimeParser) && _this.timezone) {\n        return _this.DateTimeParser(timestamp).tz(_this.timezone).locale(language);\n      }\n      return _this.DateTimeParser(timestamp).locale(language);\n    };\n  }\n  /**\n   * Initializes the i18next instance with configuration (which enables natural language as default keys)\n   */\n  Streami18n.prototype.init = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, error_1;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            this.validateCurrentLanguage();\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n            _a = this;\n            return [4 /*yield*/, this.i18nInstance.init(__assign(__assign({}, this.i18nextConfig), {\n              lng: this.currentLanguage,\n              resources: this.translations\n            }))];\n          case 2:\n            _a.t = _b.sent();\n            this.initialized = true;\n            return [3 /*break*/, 4];\n          case 3:\n            error_1 = _b.sent();\n            this.logger(\"Something went wrong with init: \".concat(JSON.stringify(error_1)));\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/, {\n              t: this.t,\n              tDateTimeParser: this.tDateTimeParser\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Returns current version translator function.\n   */\n  Streami18n.prototype.getTranslators = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this.initialized) return [3 /*break*/, 2];\n            if (this.dayjsLocales[this.currentLanguage]) {\n              this.addOrUpdateLocale(this.currentLanguage, this.dayjsLocales[this.currentLanguage]);\n            }\n            return [4 /*yield*/, this.init()];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n          case 2:\n            return [2 /*return*/, {\n              t: this.t,\n              tDateTimeParser: this.tDateTimeParser\n            }];\n        }\n      });\n    });\n  };\n  Streami18n.prototype.registerTranslation = function (language, translation, customDayjsLocale) {\n    var _a;\n    if (!translation) {\n      this.logger(\"Streami18n: registerTranslation(language, translation, customDayjsLocale) called without translation\");\n      return;\n    }\n    if (!this.translations[language]) {\n      this.translations[language] = (_a = {}, _a[defaultNS] = translation, _a);\n    } else {\n      this.translations[language][defaultNS] = translation;\n    }\n    if (customDayjsLocale) {\n      this.dayjsLocales[language] = __assign({}, customDayjsLocale);\n    } else if (!this.localeExists(language)) {\n      this.logger(\"Streami18n: registerTranslation(language, translation, customDayjsLocale) - \" + \"Locale config for \".concat(language, \" does not exist in Dayjs.\") + \"Please import the locale file using \\\"import 'dayjs/locale/\".concat(language, \"';\\\" in your app or \") + \"register the locale config with Streami18n using registerTranslation(language, translation, customDayjsLocale)\");\n    }\n    if (this.initialized) {\n      this.i18nInstance.addResources(language, defaultNS, translation);\n    }\n  };\n  Streami18n.prototype.addOrUpdateLocale = function (key, config) {\n    if (this.localeExists(key)) {\n      Dayjs.updateLocale(key, __assign({}, config));\n    } else {\n      // Merging the custom locale config with en config, so missing keys can default to english.\n      Dayjs.locale(__assign(__assign({\n        name: key\n      }, en_locale), config), undefined, true);\n    }\n  };\n  Streami18n.prototype.setLanguage = function (language) {\n    return __awaiter(this, void 0, void 0, function () {\n      var t, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.currentLanguage = language;\n            if (!this.initialized) return [2 /*return*/];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.i18nInstance.changeLanguage(language)];\n          case 2:\n            t = _a.sent();\n            if (this.dayjsLocales[language]) {\n              this.addOrUpdateLocale(this.currentLanguage, this.dayjsLocales[this.currentLanguage]);\n            }\n            this.setLanguageCallback(t);\n            return [2 /*return*/, t];\n          case 3:\n            error_2 = _a.sent();\n            this.logger(\"Failed to set language: \".concat(JSON.stringify(error_2)));\n            return [2 /*return*/, this.t];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  Streami18n.prototype.registerSetLanguageCallback = function (callback) {\n    this.setLanguageCallback = callback;\n  };\n  return Streami18n;\n}();\nexport { Streami18n };","map":{"version":3,"names":["__assign","__awaiter","__generator","i18n","Dayjs","calendar","updateLocale","LocalizedFormat","localeData","relativeTime","utc","timezone","deTranslations","enTranslations","esTranslations","frTranslations","hiTranslations","itTranslations","jaTranslations","koTranslations","nlTranslations","ptTranslations","ruTranslations","trTranslations","defaultNS","defaultLng","extend","lastDay","lastWeek","nextDay","nextWeek","sameDay","sameElse","meridiem","hour","meridiemHour","meridiemParse","en_locale","formats","months","weekdays","isDayJs","dateTimeParser","undefined","supportsTz","tz","defaultStreami18nOptions","DateTimeParser","dayjsLocaleConfigForLanguage","debug","disableDateTimeTranslations","language","logger","message","console","warn","defaultTranslatorFunction","key","Streami18n","options","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_this","i18nInstance","createInstance","setLanguageCallback","initialized","t","translations","de","en","es","fr","hi","it","ja","ko","nl","pt","ru","tr","dayjsLocales","localeExists","isCustomDateTimeParser","Object","keys","Ls","indexOf","validateCurrentLanguage","availableLanguages","currentLanguage","concat","getAvailableLanguages","geti18Instance","getTranslations","finalOptions","error","Error","translationsForLanguage","i18nextConfig","fallbackLng","interpolation","escapeValue","keySeparator","lng","nsSeparator","parseMissingKeyHandler","addOrUpdateLocale","tDateTimeParser","timestamp","locale","prototype","init","error_1","label","trys","push","resources","sent","JSON","stringify","getTranslators","registerTranslation","translation","customDayjsLocale","addResources","config","name","setLanguage","error_2","changeLanguage","registerSetLanguageCallback","callback"],"sources":["C:/Users/praka/OneDrive/Desktop/Tic-Tac-Toe/client/node_modules/stream-chat-react/dist/i18n/Streami18n.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport i18n from 'i18next';\nimport Dayjs from 'dayjs';\nimport calendar from 'dayjs/plugin/calendar';\nimport updateLocale from 'dayjs/plugin/updateLocale';\nimport LocalizedFormat from 'dayjs/plugin/localizedFormat';\nimport localeData from 'dayjs/plugin/localeData';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport { deTranslations, enTranslations, esTranslations, frTranslations, hiTranslations, itTranslations, jaTranslations, koTranslations, nlTranslations, ptTranslations, ruTranslations, trTranslations, } from './translations';\nvar defaultNS = 'translation';\nvar defaultLng = 'en';\nimport 'dayjs/locale/de';\nimport 'dayjs/locale/es';\nimport 'dayjs/locale/fr';\nimport 'dayjs/locale/hi';\nimport 'dayjs/locale/it';\nimport 'dayjs/locale/ja';\nimport 'dayjs/locale/ko';\nimport 'dayjs/locale/nl';\nimport 'dayjs/locale/pt';\nimport 'dayjs/locale/ru';\nimport 'dayjs/locale/tr';\n// These locale imports also set these locale globally.\n// So As a last step I am going to import english locale\n// to make sure I don't mess up language at other places in app.\nimport 'dayjs/locale/en';\nDayjs.extend(updateLocale);\nDayjs.extend(utc);\nDayjs.extend(timezone);\nDayjs.updateLocale('de', {\n    calendar: {\n        lastDay: '[gestern um] LT',\n        lastWeek: '[letzten] dddd [um] LT',\n        nextDay: '[morgen um] LT',\n        nextWeek: 'dddd [um] LT',\n        sameDay: '[heute um] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('es', {\n    calendar: {\n        lastDay: '[ayer a las] LT',\n        lastWeek: '[pasado] dddd [a] LT',\n        nextDay: '[mañana a] LT',\n        nextWeek: 'dddd [a] LT',\n        sameDay: '[hoy a las] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('fr', {\n    calendar: {\n        lastDay: '[Hier à] LT',\n        lastWeek: 'dddd [dernier à] LT',\n        nextDay: '[Demain à] LT',\n        nextWeek: 'dddd [à] LT',\n        sameDay: '[Aujourd’hui à] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('hi', {\n    calendar: {\n        lastDay: '[कल] LT',\n        lastWeek: '[पिछले] dddd, LT',\n        nextDay: '[कल] LT',\n        nextWeek: 'dddd, LT',\n        sameDay: '[आज] LT',\n        sameElse: 'L',\n    },\n    // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n    meridiem: function (hour) {\n        if (hour < 4) {\n            return 'रात';\n        }\n        else if (hour < 10) {\n            return 'सुबह';\n        }\n        else if (hour < 17) {\n            return 'दोपहर';\n        }\n        else if (hour < 20) {\n            return 'शाम';\n        }\n        else {\n            return 'रात';\n        }\n    },\n    meridiemHour: function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'रात') {\n            return hour < 4 ? hour : hour + 12;\n        }\n        else if (meridiem === 'सुबह') {\n            return hour;\n        }\n        else if (meridiem === 'दोपहर') {\n            return hour >= 10 ? hour : hour + 12;\n        }\n        else if (meridiem === 'शाम') {\n            return hour + 12;\n        }\n        return hour;\n    },\n    meridiemParse: /रात|सुबह|दोपहर|शाम/,\n});\nDayjs.updateLocale('it', {\n    calendar: {\n        lastDay: '[Ieri alle] LT',\n        lastWeek: '[lo scorso] dddd [alle] LT',\n        nextDay: '[Domani alle] LT',\n        nextWeek: 'dddd [alle] LT',\n        sameDay: '[Oggi alle] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('ja', {\n    calendar: {\n        lastDay: '[昨日] LT',\n        lastWeek: 'dddd LT',\n        nextDay: '[明日] LT',\n        nextWeek: '[次の] dddd LT',\n        sameDay: '[今日] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('ko', {\n    calendar: {\n        lastDay: '[어제] LT',\n        lastWeek: '[지난] dddd LT',\n        nextDay: '[내일] LT',\n        nextWeek: 'dddd LT',\n        sameDay: '[오늘] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('nl', {\n    calendar: {\n        lastDay: '[gisteren om] LT',\n        lastWeek: '[afgelopen] dddd [om] LT',\n        nextDay: '[morgen om] LT',\n        nextWeek: 'dddd [om] LT',\n        sameDay: '[vandaag om] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('pt', {\n    calendar: {\n        lastDay: '[ontem às] LT',\n        lastWeek: 'dddd [passada às] LT',\n        nextDay: '[amanhã às] LT',\n        nextWeek: 'dddd [às] LT',\n        sameDay: '[hoje às] LT',\n        sameElse: 'L',\n    },\n});\nDayjs.updateLocale('ru', {\n    calendar: {\n        lastDay: '[Вчера, в] LT',\n        nextDay: '[Завтра, в] LT',\n        sameDay: '[Сегодня, в] LT',\n    },\n});\nDayjs.updateLocale('tr', {\n    calendar: {\n        lastDay: '[dün] LT',\n        lastWeek: '[geçen] dddd [saat] LT',\n        nextDay: '[yarın saat] LT',\n        nextWeek: '[gelecek] dddd [saat] LT',\n        sameDay: '[bugün saat] LT',\n        sameElse: 'L',\n    },\n});\nvar en_locale = {\n    formats: {},\n    months: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ],\n    relativeTime: {},\n    weekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n};\n// Type guards to check DayJs\nvar isDayJs = function (dateTimeParser) {\n    return dateTimeParser.extend !== undefined;\n};\nvar supportsTz = function (dateTimeParser) {\n    return dateTimeParser.tz !== undefined;\n};\n/**\n * Wrapper around [i18next](https://www.i18next.com/) class for Stream related translations.\n * Instance of this class should be provided to Chat component to handle translations.\n * Stream provides following list of in-built translations:\n * 1. English (en)\n * 2. Dutch (nl)\n * 3. Russian (ru)\n * 4. Turkish (tr)\n * 5. French (fr)\n * 6. Italian (it)\n * 7. Hindi (hi)\n * 8. Spanish (es)\n * 9. Portuguese (pt)\n * 10. German (de)\n * 11. Japanese (ja)\n * 12. Korean (ko)\n *\n * Simplest way to start using chat components in one of the in-built languages would be following:\n *\n * ```\n * const i18n = new Streami18n({ language 'nl' });\n * <Chat client={chatClient} i18nInstance={i18n}>\n *  ...\n * </Chat>\n * ```\n *\n * If you would like to override certain keys in in-built translation.\n * UI will be automatically updated in this case.\n *\n * ```\n * const i18n = new Streami18n({\n *  language: 'nl',\n *  translationsForLanguage: {\n *    'Nothing yet...': 'Nog Niet ...',\n *    '{{ firstUser }} and {{ secondUser }} are typing...': '{{ firstUser }} en {{ secondUser }} zijn aan het typen...',\n *  }\n * });\n *\n * If you would like to register additional languages, use registerTranslation. You can add as many languages as you want:\n *\n * i18n.registerTranslation('zh', {\n *  'Nothing yet...': 'Nog Niet ...',\n *  '{{ firstUser }} and {{ secondUser }} are typing...': '{{ firstUser }} en {{ secondUser }} zijn aan het typen...',\n * });\n *\n * <Chat client={chatClient} i18nInstance={i18n}>\n *  ...\n * </Chat>\n * ```\n *\n * You can use the same function to add whole new language as well.\n *\n * ```\n * const i18n = new Streami18n();\n *\n * i18n.registerTranslation('mr', {\n *  'Nothing yet...': 'काहीही नाही  ...',\n *  '{{ firstUser }} and {{ secondUser }} are typing...': '{{ firstUser }} आणि {{ secondUser }} टीपी करत आहेत ',\n * });\n *\n * // Make sure to call setLanguage to reflect new language in UI.\n * i18n.setLanguage('it');\n * <Chat client={chatClient} i18nInstance={i18n}>\n *  ...\n * </Chat>\n * ```\n *\n * ## Datetime translations\n *\n * Stream react chat components uses [dayjs](https://day.js.org/en/) internally by default to format datetime stamp.\n * e.g., in ChannelPreview, MessageContent components.\n * Dayjs has locale support as well - https://day.js.org/docs/en/i18n/i18n\n * Dayjs is a lightweight alternative to Momentjs with the same modern API.\n *\n * Dayjs provides locale config for plenty of languages, you can check the whole list of locale configs at following url\n * https://github.com/iamkun/dayjs/tree/dev/src/locale\n *\n * You can either provide the dayjs locale config while registering\n * language with Streami18n (either via constructor or registerTranslation()) or you can provide your own Dayjs or Moment instance\n * to Streami18n constructor, which will be then used internally (using the language locale) in components.\n *\n * 1. Via language registration\n *\n * e.g.,\n * ```\n * const i18n = new Streami18n({\n *  language: 'nl',\n *  dayjsLocaleConfigForLanguage: {\n *    months: [...],\n *    monthsShort: [...],\n *    calendar: {\n *      sameDay: ...'\n *    }\n *  }\n * });\n * ```\n *\n * Similarly, you can add locale config for moment while registering translation via `registerTranslation` function.\n *\n * e.g.,\n * ```\n * const i18n = new Streami18n();\n *\n * i18n.registerTranslation(\n *  'mr',\n *  {\n *    'Nothing yet...': 'काहीही नाही  ...',\n *    '{{ firstUser }} and {{ secondUser }} are typing...': '{{ firstUser }} आणि {{ secondUser }} टीपी करत आहेत ',\n *  },\n *  {\n *    months: [...],\n *    monthsShort: [...],\n *    calendar: {\n *      sameDay: ...'\n *    }\n *  }\n * );\n *```\n * 2. Provide your own Moment object\n *\n * ```js\n * import 'moment/locale/nl';\n * import 'moment/locale/it';\n * // or if you want to include all locales\n * import 'moment/min/locales';\n *\n * import Moment from moment\n *\n * const i18n = new Streami18n({\n *  language: 'nl',\n *  DateTimeParser: Moment\n * })\n * ```\n *\n * 3. Provide your own Dayjs object\n *\n * ```js\n * import Dayjs from 'dayjs'\n *\n * import 'dayjs/locale/nl';\n * import 'dayjs/locale/it';\n * // or if you want to include all locales\n * import 'dayjs/min/locales';\n *\n * const i18n = new Streami18n({\n *  language: 'nl',\n *  DateTimeParser: Dayjs\n * })\n * ```\n * If you would like to stick with english language for datetimes in Stream components, you can set `disableDateTimeTranslations` to true.\n *\n */\nvar defaultStreami18nOptions = {\n    DateTimeParser: Dayjs,\n    dayjsLocaleConfigForLanguage: null,\n    debug: false,\n    disableDateTimeTranslations: false,\n    language: 'en',\n    logger: function (message) { return console.warn(message); },\n};\nexport var defaultTranslatorFunction = function (key) { return key; };\nvar Streami18n = /** @class */ (function () {\n    /**\n     * Constructor accepts following options:\n     *  - language (String) default: 'en'\n     *    Language code e.g., en, tr\n     *\n     *  - translationsForLanguage (object)\n     *    Translations object. Please check src/i18n/en.json for example.\n     *\n     *  - disableDateTimeTranslations (boolean) default: false\n     *    Disable translations for date-times\n     *\n     *  - debug (boolean) default: false\n     *    Enable debug mode in internal i18n class\n     *\n     *  - logger (function) default: () => {}\n     *    Logger function to log warnings/errors from this class\n     *\n     *  - dayjsLocaleConfigForLanguage (object) default: 'enConfig'\n     *    [Config object](https://momentjs.com/docs/#/i18n/changing-locale/) for internal moment object,\n     *    corresponding to language (param)\n     *\n     *  - DateTimeParser (function) Moment or Dayjs instance/function.\n     *    Make sure to load all the required locales in this Moment or Dayjs instance that you will be provide to Streami18n\n     *\n     * @param {*} options\n     */\n    function Streami18n(options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        if (options === void 0) { options = {}; }\n        var _this = this;\n        this.i18nInstance = i18n.createInstance();\n        this.Dayjs = null;\n        this.setLanguageCallback = function () { return null; };\n        this.initialized = false;\n        this.t = defaultTranslatorFunction;\n        this.translations = {\n            de: (_a = {}, _a[defaultNS] = deTranslations, _a),\n            en: (_b = {}, _b[defaultNS] = enTranslations, _b),\n            es: (_c = {}, _c[defaultNS] = esTranslations, _c),\n            fr: (_d = {}, _d[defaultNS] = frTranslations, _d),\n            hi: (_e = {}, _e[defaultNS] = hiTranslations, _e),\n            it: (_f = {}, _f[defaultNS] = itTranslations, _f),\n            ja: (_g = {}, _g[defaultNS] = jaTranslations, _g),\n            ko: (_h = {}, _h[defaultNS] = koTranslations, _h),\n            nl: (_j = {}, _j[defaultNS] = nlTranslations, _j),\n            pt: (_k = {}, _k[defaultNS] = ptTranslations, _k),\n            ru: (_l = {}, _l[defaultNS] = ruTranslations, _l),\n            tr: (_m = {}, _m[defaultNS] = trTranslations, _m),\n        };\n        /**\n         * dayjs.defineLanguage('nl') also changes the global locale. We don't want to do that\n         * when user calls registerTranslation() function. So instead we will store the locale configs\n         * given to registerTranslation() function in `dayjsLocales` object, and register the required locale\n         * with moment, when setLanguage is called.\n         * */\n        this.dayjsLocales = {};\n        this.localeExists = function (language) {\n            if (_this.isCustomDateTimeParser)\n                return true;\n            return Object.keys(Dayjs.Ls).indexOf(language) > -1;\n        };\n        this.validateCurrentLanguage = function () {\n            var availableLanguages = Object.keys(_this.translations);\n            if (availableLanguages.indexOf(_this.currentLanguage) === -1) {\n                _this.logger(\"Streami18n: '\".concat(_this.currentLanguage, \"' language is not registered.\") +\n                    \" Please make sure to call streami18n.registerTranslation('\".concat(_this.currentLanguage, \"', {...}) or \") +\n                    \"use one the built-in supported languages - \".concat(_this.getAvailableLanguages()));\n                _this.currentLanguage = defaultLng;\n            }\n        };\n        /** Returns an instance of i18next used within this class instance */\n        this.geti18Instance = function () { return _this.i18nInstance; };\n        /** Returns list of available languages. */\n        this.getAvailableLanguages = function () { return Object.keys(_this.translations); };\n        /** Returns all the translation dictionary for all inbuilt-languages */\n        this.getTranslations = function () { return _this.translations; };\n        var finalOptions = __assign(__assign({}, defaultStreami18nOptions), options);\n        // Prepare the i18next configuration.\n        this.logger = finalOptions.logger;\n        this.currentLanguage = finalOptions.language;\n        this.DateTimeParser = finalOptions.DateTimeParser;\n        this.timezone = finalOptions.timezone;\n        try {\n            if (this.DateTimeParser && isDayJs(this.DateTimeParser)) {\n                this.DateTimeParser.extend(LocalizedFormat);\n                this.DateTimeParser.extend(calendar);\n                this.DateTimeParser.extend(localeData);\n                this.DateTimeParser.extend(relativeTime);\n            }\n        }\n        catch (error) {\n            throw Error(\"Streami18n: Looks like you wanted to provide Dayjs instance, but something went wrong while adding plugins \".concat(error));\n        }\n        this.isCustomDateTimeParser = !!options.DateTimeParser;\n        var translationsForLanguage = finalOptions.translationsForLanguage;\n        if (translationsForLanguage) {\n            this.translations[this.currentLanguage] = (_o = {},\n                _o[defaultNS] = this.translations[this.currentLanguage] &&\n                    this.translations[this.currentLanguage][defaultNS]\n                    ? __assign(__assign({}, this.translations[this.currentLanguage][defaultNS]), translationsForLanguage) : translationsForLanguage,\n                _o);\n        }\n        // If translations don't exist for given language, then set it as empty object.\n        if (!this.translations[this.currentLanguage]) {\n            this.translations[this.currentLanguage] = (_p = {},\n                _p[defaultNS] = {},\n                _p);\n        }\n        this.i18nextConfig = {\n            debug: finalOptions.debug,\n            fallbackLng: false,\n            interpolation: { escapeValue: false },\n            keySeparator: false,\n            lng: this.currentLanguage,\n            nsSeparator: false,\n            parseMissingKeyHandler: function (key) {\n                _this.logger(\"Streami18n: Missing translation for key: \".concat(key));\n                return key;\n            },\n        };\n        this.validateCurrentLanguage();\n        var dayjsLocaleConfigForLanguage = finalOptions.dayjsLocaleConfigForLanguage;\n        if (dayjsLocaleConfigForLanguage) {\n            this.addOrUpdateLocale(this.currentLanguage, __assign({}, dayjsLocaleConfigForLanguage));\n        }\n        else if (!this.localeExists(this.currentLanguage)) {\n            this.logger(\"Streami18n: Streami18n(...) - Locale config for \".concat(this.currentLanguage, \" does not exist in momentjs.\") +\n                \"Please import the locale file using \\\"import 'moment/locale/\".concat(this.currentLanguage, \"';\\\" in your app or \") +\n                \"register the locale config with Streami18n using registerTranslation(language, translation, customDayjsLocale)\");\n        }\n        this.tDateTimeParser = function (timestamp) {\n            var language = finalOptions.disableDateTimeTranslations || !_this.localeExists(_this.currentLanguage)\n                ? defaultLng\n                : _this.currentLanguage;\n            if (isDayJs(_this.DateTimeParser)) {\n                return supportsTz(_this.DateTimeParser)\n                    ? _this.DateTimeParser(timestamp).tz(_this.timezone).locale(language)\n                    : _this.DateTimeParser(timestamp).locale(language);\n            }\n            if (supportsTz(_this.DateTimeParser) && _this.timezone) {\n                return _this.DateTimeParser(timestamp).tz(_this.timezone).locale(language);\n            }\n            return _this.DateTimeParser(timestamp).locale(language);\n        };\n    }\n    /**\n     * Initializes the i18next instance with configuration (which enables natural language as default keys)\n     */\n    Streami18n.prototype.init = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, error_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.validateCurrentLanguage();\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        _a = this;\n                        return [4 /*yield*/, this.i18nInstance.init(__assign(__assign({}, this.i18nextConfig), { lng: this.currentLanguage, resources: this.translations }))];\n                    case 2:\n                        _a.t = _b.sent();\n                        this.initialized = true;\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_1 = _b.sent();\n                        this.logger(\"Something went wrong with init: \".concat(JSON.stringify(error_1)));\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/, {\n                            t: this.t,\n                            tDateTimeParser: this.tDateTimeParser,\n                        }];\n                }\n            });\n        });\n    };\n    /**\n     * Returns current version translator function.\n     */\n    Streami18n.prototype.getTranslators = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this.initialized) return [3 /*break*/, 2];\n                        if (this.dayjsLocales[this.currentLanguage]) {\n                            this.addOrUpdateLocale(this.currentLanguage, this.dayjsLocales[this.currentLanguage]);\n                        }\n                        return [4 /*yield*/, this.init()];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2: return [2 /*return*/, {\n                            t: this.t,\n                            tDateTimeParser: this.tDateTimeParser,\n                        }];\n                }\n            });\n        });\n    };\n    Streami18n.prototype.registerTranslation = function (language, translation, customDayjsLocale) {\n        var _a;\n        if (!translation) {\n            this.logger(\"Streami18n: registerTranslation(language, translation, customDayjsLocale) called without translation\");\n            return;\n        }\n        if (!this.translations[language]) {\n            this.translations[language] = (_a = {}, _a[defaultNS] = translation, _a);\n        }\n        else {\n            this.translations[language][defaultNS] = translation;\n        }\n        if (customDayjsLocale) {\n            this.dayjsLocales[language] = __assign({}, customDayjsLocale);\n        }\n        else if (!this.localeExists(language)) {\n            this.logger(\"Streami18n: registerTranslation(language, translation, customDayjsLocale) - \" +\n                \"Locale config for \".concat(language, \" does not exist in Dayjs.\") +\n                \"Please import the locale file using \\\"import 'dayjs/locale/\".concat(language, \"';\\\" in your app or \") +\n                \"register the locale config with Streami18n using registerTranslation(language, translation, customDayjsLocale)\");\n        }\n        if (this.initialized) {\n            this.i18nInstance.addResources(language, defaultNS, translation);\n        }\n    };\n    Streami18n.prototype.addOrUpdateLocale = function (key, config) {\n        if (this.localeExists(key)) {\n            Dayjs.updateLocale(key, __assign({}, config));\n        }\n        else {\n            // Merging the custom locale config with en config, so missing keys can default to english.\n            Dayjs.locale(__assign(__assign({ name: key }, en_locale), config), undefined, true);\n        }\n    };\n    Streami18n.prototype.setLanguage = function (language) {\n        return __awaiter(this, void 0, void 0, function () {\n            var t, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.currentLanguage = language;\n                        if (!this.initialized)\n                            return [2 /*return*/];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.i18nInstance.changeLanguage(language)];\n                    case 2:\n                        t = _a.sent();\n                        if (this.dayjsLocales[language]) {\n                            this.addOrUpdateLocale(this.currentLanguage, this.dayjsLocales[this.currentLanguage]);\n                        }\n                        this.setLanguageCallback(t);\n                        return [2 /*return*/, t];\n                    case 3:\n                        error_2 = _a.sent();\n                        this.logger(\"Failed to set language: \".concat(JSON.stringify(error_2)));\n                        return [2 /*return*/, this.t];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Streami18n.prototype.registerSetLanguageCallback = function (callback) {\n        this.setLanguageCallback = callback;\n    };\n    return Streami18n;\n}());\nexport { Streami18n };\n"],"mappings":"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OAAO,EAAE,gBAAgB;IACzBE,OAAO,EAAE;EACb;AACJ,CAAC,CAAC;AACF3B,KAAK,CAACE,YAAY,CAAC,IAAI,EAAE;EACrBD,QAAQ,EAAE;IACNsB,OAAO,EAAE,UAAU;IACnBC,QAAQ,EAAE,wBAAwB;IAClCC,OAAO,EAAE,iBAAiB;IAC1BC,QAAQ,EAAE,0BAA0B;IACpCC,OAAO,EAAE,iBAAiB;IAC1BC,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC;AACF,IAAIK,SAAS,GAAG;EACZC,OAAO,EAAE,CAAC,CAAC;EACXC,MAAM,EAAE,CACJ,SAAS,EACT,UAAU,EACV,OAAO,EACP,OAAO,EACP,KAAK,EACL,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,CACb;EACD9B,YAAY,EAAE,CAAC,CAAC;EAChB+B,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU;AAC3F,CAAC;AACD;AACA,IAAIC,OAAO,GAAG,SAAAA,CAAUC,cAAc,EAAE;EACpC,OAAOA,cAAc,CAAChB,MAAM,KAAKiB,SAAS;AAC9C,CAAC;AACD,IAAIC,UAAU,GAAG,SAAAA,CAAUF,cAAc,EAAE;EACvC,OAAOA,cAAc,CAACG,EAAE,KAAKF,SAAS;AAC1C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIG,wBAAwB,GAAG;EAC3BC,cAAc,EAAE3C,KAAK;EACrB4C,4BAA4B,EAAE,IAAI;EAClCC,KAAK,EAAE,KAAK;EACZC,2BAA2B,EAAE,KAAK;EAClCC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,SAAAA,CAAUC,OAAO,EAAE;IAAE,OAAOC,OAAO,CAACC,IAAI,CAACF,OAAO,CAAC;EAAE;AAC/D,CAAC;AACD,OAAO,IAAIG,yBAAyB,GAAG,SAAAA,CAAUC,GAAG,EAAE;EAAE,OAAOA,GAAG;AAAE,CAAC;AACrE,IAAIC,UAAU,GAAG,aAAe,YAAY;EACxC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAASA,UAAUA,CAACC,OAAO,EAAE;IACzB,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;IAC1D,IAAId,OAAO,KAAK,KAAK,CAAC,EAAE;MAAEA,OAAO,GAAG,CAAC,CAAC;IAAE;IACxC,IAAIe,KAAK,GAAG,IAAI;IAChB,IAAI,CAACC,YAAY,GAAGxE,IAAI,CAACyE,cAAc,CAAC,CAAC;IACzC,IAAI,CAACxE,KAAK,GAAG,IAAI;IACjB,IAAI,CAACyE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"},"metadata":{},"sourceType":"module","externalDependencies":[]}