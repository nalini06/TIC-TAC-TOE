{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { isUserMuted, validateAndGetMessage } from '../utils';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useTranslationContext } from '../../../context/TranslationContext';\nexport var missingUseMuteHandlerParamsWarning = 'useMuteHandler was called but it is missing one or more necessary parameter.';\nexport var useMuteHandler = function (message, notifications) {\n  if (notifications === void 0) {\n    notifications = {};\n  }\n  var mutes = useChannelStateContext('useMuteHandler').mutes;\n  var client = useChatContext('useMuteHandler').client;\n  var t = useTranslationContext('useMuteHandler').t;\n  return function (event) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var getErrorNotification, getSuccessNotification, notify, successMessage, e_1, errorMessage, fallbackMessage, successMessage, e_2, errorMessage;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            event.preventDefault();\n            getErrorNotification = notifications.getErrorNotification, getSuccessNotification = notifications.getSuccessNotification, notify = notifications.notify;\n            if (!t || !(message === null || message === void 0 ? void 0 : message.user) || !notify || !client) {\n              console.warn(missingUseMuteHandlerParamsWarning);\n              return [2 /*return*/];\n            }\n\n            if (!!isUserMuted(message, mutes)) return [3 /*break*/, 5];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, client.muteUser(message.user.id)];\n          case 2:\n            _a.sent();\n            successMessage = getSuccessNotification && validateAndGetMessage(getSuccessNotification, [message.user]);\n            notify(successMessage || t(\"{{ user }} has been muted\", {\n              user: message.user.name || message.user.id\n            }), 'success');\n            return [3 /*break*/, 4];\n          case 3:\n            e_1 = _a.sent();\n            errorMessage = getErrorNotification && validateAndGetMessage(getErrorNotification, [message.user]);\n            notify(errorMessage || t('Error muting a user ...'), 'error');\n            return [3 /*break*/, 4];\n          case 4:\n            return [3 /*break*/, 8];\n          case 5:\n            _a.trys.push([5, 7,, 8]);\n            return [4 /*yield*/, client.unmuteUser(message.user.id)];\n          case 6:\n            _a.sent();\n            fallbackMessage = t(\"{{ user }} has been unmuted\", {\n              user: message.user.name || message.user.id\n            });\n            successMessage = getSuccessNotification && validateAndGetMessage(getSuccessNotification, [message.user]) || fallbackMessage;\n            if (typeof successMessage === 'string') {\n              notify(successMessage, 'success');\n            }\n            return [3 /*break*/, 8];\n          case 7:\n            e_2 = _a.sent();\n            errorMessage = getErrorNotification && validateAndGetMessage(getErrorNotification, [message.user]) || t('Error unmuting a user ...');\n            if (typeof errorMessage === 'string') {\n              notify(errorMessage, 'error');\n            }\n            return [3 /*break*/, 8];\n          case 8:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n};","map":{"version":3,"names":["__awaiter","__generator","isUserMuted","validateAndGetMessage","useChannelStateContext","useChatContext","useTranslationContext","missingUseMuteHandlerParamsWarning","useMuteHandler","message","notifications","mutes","client","t","event","getErrorNotification","getSuccessNotification","notify","successMessage","e_1","errorMessage","fallbackMessage","e_2","_a","label","preventDefault","user","console","warn","trys","push","muteUser","id","sent","name","unmuteUser"],"sources":["C:/Users/praka/OneDrive/Desktop/Tic-Tac-Toe/client/node_modules/stream-chat-react/dist/components/Message/hooks/useMuteHandler.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { isUserMuted, validateAndGetMessage } from '../utils';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useTranslationContext } from '../../../context/TranslationContext';\nexport var missingUseMuteHandlerParamsWarning = 'useMuteHandler was called but it is missing one or more necessary parameter.';\nexport var useMuteHandler = function (message, notifications) {\n    if (notifications === void 0) { notifications = {}; }\n    var mutes = useChannelStateContext('useMuteHandler').mutes;\n    var client = useChatContext('useMuteHandler').client;\n    var t = useTranslationContext('useMuteHandler').t;\n    return function (event) { return __awaiter(void 0, void 0, void 0, function () {\n        var getErrorNotification, getSuccessNotification, notify, successMessage, e_1, errorMessage, fallbackMessage, successMessage, e_2, errorMessage;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    event.preventDefault();\n                    getErrorNotification = notifications.getErrorNotification, getSuccessNotification = notifications.getSuccessNotification, notify = notifications.notify;\n                    if (!t || !(message === null || message === void 0 ? void 0 : message.user) || !notify || !client) {\n                        console.warn(missingUseMuteHandlerParamsWarning);\n                        return [2 /*return*/];\n                    }\n                    if (!!isUserMuted(message, mutes)) return [3 /*break*/, 5];\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, client.muteUser(message.user.id)];\n                case 2:\n                    _a.sent();\n                    successMessage = getSuccessNotification && validateAndGetMessage(getSuccessNotification, [message.user]);\n                    notify(successMessage ||\n                        t(\"{{ user }} has been muted\", {\n                            user: message.user.name || message.user.id,\n                        }), 'success');\n                    return [3 /*break*/, 4];\n                case 3:\n                    e_1 = _a.sent();\n                    errorMessage = getErrorNotification && validateAndGetMessage(getErrorNotification, [message.user]);\n                    notify(errorMessage || t('Error muting a user ...'), 'error');\n                    return [3 /*break*/, 4];\n                case 4: return [3 /*break*/, 8];\n                case 5:\n                    _a.trys.push([5, 7, , 8]);\n                    return [4 /*yield*/, client.unmuteUser(message.user.id)];\n                case 6:\n                    _a.sent();\n                    fallbackMessage = t(\"{{ user }} has been unmuted\", {\n                        user: message.user.name || message.user.id,\n                    });\n                    successMessage = (getSuccessNotification &&\n                        validateAndGetMessage(getSuccessNotification, [message.user])) ||\n                        fallbackMessage;\n                    if (typeof successMessage === 'string') {\n                        notify(successMessage, 'success');\n                    }\n                    return [3 /*break*/, 8];\n                case 7:\n                    e_2 = _a.sent();\n                    errorMessage = (getErrorNotification && validateAndGetMessage(getErrorNotification, [message.user])) ||\n                        t('Error unmuting a user ...');\n                    if (typeof errorMessage === 'string') {\n                        notify(errorMessage, 'error');\n                    }\n                    return [3 /*break*/, 8];\n                case 8: return [2 /*return*/];\n            }\n        });\n    }); };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}