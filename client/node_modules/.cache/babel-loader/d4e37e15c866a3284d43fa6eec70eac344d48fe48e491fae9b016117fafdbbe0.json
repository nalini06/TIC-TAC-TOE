{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Textarea from 'react-textarea-autosize';\nimport getCaretCoordinates from 'textarea-caret';\nimport { isValidElementType } from 'react-is';\nimport clsx from 'clsx';\nimport { List as DefaultSuggestionList } from './List';\nimport { DEFAULT_CARET_POSITION, defaultScrollToItem, errorMessage, triggerPropsCheck } from './utils';\nimport { CommandItem } from '../CommandItem';\nimport { UserItem } from '../UserItem';\nimport { isSafari } from '../../utils/browsers';\nvar ReactTextareaAutocomplete = /** @class */function (_super) {\n  __extends(ReactTextareaAutocomplete, _super);\n  function ReactTextareaAutocomplete(props) {\n    var _this = _super.call(this, props) || this;\n    // FIXME: unused method\n    _this.getSelectionPosition = function () {\n      if (!_this.textareaRef) return null;\n      return {\n        selectionEnd: _this.textareaRef.selectionEnd,\n        selectionStart: _this.textareaRef.selectionStart\n      };\n    };\n    // FIXME: unused method\n    _this.getSelectedText = function () {\n      if (!_this.textareaRef) return null;\n      var _a = _this.textareaRef,\n        selectionEnd = _a.selectionEnd,\n        selectionStart = _a.selectionStart;\n      if (selectionStart === selectionEnd) return null;\n      return _this.state.value.substr(selectionStart, selectionEnd - selectionStart);\n    };\n    _this.setCaretPosition = function (position) {\n      if (position === void 0) {\n        position = 0;\n      }\n      if (!_this.textareaRef) return;\n      _this.textareaRef.focus();\n      _this.textareaRef.setSelectionRange(position, position);\n    };\n    _this.getCaretPosition = function () {\n      if (!_this.textareaRef) return 0;\n      return _this.textareaRef.selectionEnd;\n    };\n    /**\n     * isComposing prevents double submissions in Korean and other languages.\n     * starting point for a read:\n     * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/isComposing\n     * In the long term, the fix should happen by handling keypress, but changing this has unknown implications.\n     * @param event React.KeyboardEvent\n     */\n    _this._defaultShouldSubmit = function (event) {\n      return event.key === 'Enter' && !event.shiftKey && !event.nativeEvent.isComposing;\n    };\n    _this._handleKeyDown = function (event) {\n      var _a = _this.props.shouldSubmit,\n        shouldSubmit = _a === void 0 ? _this._defaultShouldSubmit : _a;\n      // prevent default behaviour when the selection list is rendered\n      if ((event.key === 'ArrowUp' || event.key === 'ArrowDown') && _this.dropdownRef) event.preventDefault();\n      if (shouldSubmit === null || shouldSubmit === void 0 ? void 0 : shouldSubmit(event)) return _this._onEnter(event);\n      if (event.key === ' ') return _this._onSpace(event);\n      if (event.key === 'Escape') return _this._closeAutocomplete();\n    };\n    _this._onEnter = function (event) {\n      if (!_this.textareaRef) return;\n      var trigger = _this.state.currentTrigger;\n      if (!trigger || !_this.state.data) {\n        // trigger a submit\n        _this._replaceWord();\n        if (_this.textareaRef) {\n          _this.textareaRef.selectionEnd = 0;\n        }\n        _this.props.handleSubmit(event);\n        _this._closeAutocomplete();\n      }\n    };\n    _this._onSpace = function () {\n      if (!_this.props.replaceWord || !_this.textareaRef) return;\n      // don't change characters if the element doesn't have focus\n      var hasFocus = _this.textareaRef.matches(':focus');\n      if (!hasFocus) return;\n      _this._replaceWord();\n    };\n    _this._replaceWord = function () {\n      var value = _this.state.value;\n      var lastWordRegex = /([^\\s]+)(\\s*)$/;\n      var match = lastWordRegex.exec(value.slice(0, _this.getCaretPosition()));\n      var lastWord = match && match[1];\n      if (!lastWord) return;\n      var spaces = match[2];\n      var newWord = _this.props.replaceWord(lastWord);\n      if (newWord == null) return;\n      var textBeforeWord = value.slice(0, _this.getCaretPosition() - match[0].length);\n      var textAfterCaret = value.slice(_this.getCaretPosition(), -1);\n      var newText = textBeforeWord + newWord + spaces + textAfterCaret;\n      _this.setState({\n        value: newText\n      }, function () {\n        // fire onChange event after successful selection\n        var e = new CustomEvent('change', {\n          bubbles: true\n        });\n        _this.textareaRef.dispatchEvent(e);\n        if (_this.props.onChange) _this.props.onChange(e);\n      });\n    };\n    _this._onSelect = function (newToken) {\n      var _a = _this.props,\n        closeCommandsList = _a.closeCommandsList,\n        closeMentionsList = _a.closeMentionsList,\n        onChange = _a.onChange,\n        showCommandsList = _a.showCommandsList,\n        showMentionsList = _a.showMentionsList;\n      var _b = _this.state,\n        stateTrigger = _b.currentTrigger,\n        selectionEnd = _b.selectionEnd,\n        textareaValue = _b.value;\n      var currentTrigger = showCommandsList ? '/' : showMentionsList ? '@' : stateTrigger;\n      if (!currentTrigger) return;\n      var computeCaretPosition = function (position, token, startToken) {\n        switch (position) {\n          case 'start':\n            return startToken;\n          case 'next':\n          case 'end':\n            return startToken + token.length;\n          default:\n            if (!Number.isInteger(position)) {\n              throw new Error('RTA: caretPosition should be \"start\", \"next\", \"end\" or number.');\n            }\n            return position;\n        }\n      };\n      var textToModify = showCommandsList ? '/' : showMentionsList ? '@' : textareaValue.slice(0, selectionEnd);\n      var startOfTokenPosition = textToModify.lastIndexOf(currentTrigger);\n      // we add space after emoji is selected if a caret position is next\n      var newTokenString = newToken.caretPosition === 'next' ? \"\".concat(newToken.text, \" \") : newToken.text;\n      var newCaretPosition = computeCaretPosition(newToken.caretPosition, newTokenString, startOfTokenPosition);\n      var modifiedText = textToModify.substring(0, startOfTokenPosition) + newTokenString;\n      var valueToReplace = textareaValue.replace(textToModify, modifiedText);\n      // set the new textarea value and after that set the caret back to its position\n      _this.setState({\n        dataLoading: false,\n        value: valueToReplace\n      }, function () {\n        // fire onChange event after successful selection\n        var e = new CustomEvent('change', {\n          bubbles: true\n        });\n        _this.textareaRef.dispatchEvent(e);\n        if (onChange) onChange(e);\n        _this.setCaretPosition(newCaretPosition);\n      });\n      _this._closeAutocomplete();\n      if (showCommandsList) closeCommandsList();\n      if (showMentionsList) closeMentionsList();\n    };\n    _this._getItemOnSelect = function (paramTrigger) {\n      var stateTrigger = _this.state.currentTrigger;\n      var triggerSettings = _this._getCurrentTriggerSettings(paramTrigger);\n      var currentTrigger = paramTrigger || stateTrigger;\n      if (!currentTrigger || !triggerSettings) return null;\n      var callback = triggerSettings.callback;\n      if (!callback) return null;\n      return function (item) {\n        if (typeof callback !== 'function') {\n          throw new Error('Output functor is not defined! You have to define \"output\" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');\n        }\n        if (callback) {\n          return callback(item, currentTrigger);\n        }\n        return null;\n      };\n    };\n    _this._getTextToReplace = function (paramTrigger) {\n      var _a = _this.state,\n        actualToken = _a.actualToken,\n        stateTrigger = _a.currentTrigger;\n      var triggerSettings = _this._getCurrentTriggerSettings(paramTrigger);\n      var currentTrigger = paramTrigger || stateTrigger;\n      if (!currentTrigger || !triggerSettings) return null;\n      var output = triggerSettings.output;\n      return function (item) {\n        if (typeof item === 'object' && (!output || typeof output !== 'function')) {\n          throw new Error('Output functor is not defined! If you are using items as object you have to define \"output\" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');\n        }\n        if (output) {\n          var textToReplace = output(item, currentTrigger);\n          if (!textToReplace || typeof textToReplace === 'number') {\n            throw new Error(\"Output functor should return string or object in shape {text: string, caretPosition: string | number}.\\nGot \\\"\".concat(String(textToReplace), \"\\\". Check the implementation for trigger \\\"\").concat(currentTrigger, \"\\\" and its token \\\"\").concat(actualToken, \"\\\"\\n\\nSee https://github.com/webscopeio/react-textarea-autocomplete#trigger-type for more informations.\\n\"));\n          }\n          if (typeof textToReplace === 'string') {\n            return {\n              caretPosition: DEFAULT_CARET_POSITION,\n              text: textToReplace\n            };\n          }\n          if (!textToReplace.text && currentTrigger !== ':') {\n            throw new Error(\"Output \\\"text\\\" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger \\\"\".concat(currentTrigger, \"\\\" and its token \\\"\").concat(actualToken, \"\\\"\\n\"));\n          }\n          if (!textToReplace.caretPosition) {\n            throw new Error(\"Output \\\"caretPosition\\\" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger \\\"\".concat(currentTrigger, \"\\\" and its token \\\"\").concat(actualToken, \"\\\"\\n\"));\n          }\n          return textToReplace;\n        }\n        if (typeof item !== 'string') {\n          throw new Error('Output item should be string\\n');\n        }\n        return {\n          caretPosition: DEFAULT_CARET_POSITION,\n          text: \"\".concat(currentTrigger).concat(item).concat(currentTrigger)\n        };\n      };\n    };\n    _this._getCurrentTriggerSettings = function (paramTrigger) {\n      var stateTrigger = _this.state.currentTrigger;\n      var currentTrigger = paramTrigger || stateTrigger;\n      if (!currentTrigger) return null;\n      return _this.props.trigger[currentTrigger];\n    };\n    _this._getValuesFromProvider = function () {\n      var _a = _this.state,\n        actualToken = _a.actualToken,\n        currentTrigger = _a.currentTrigger;\n      var triggerSettings = _this._getCurrentTriggerSettings();\n      if (!currentTrigger || !triggerSettings) return;\n      var component = triggerSettings.component,\n        dataProvider = triggerSettings.dataProvider;\n      if (typeof dataProvider !== 'function') {\n        throw new Error('Trigger provider has to be a function!');\n      }\n      _this.setState({\n        dataLoading: true\n      });\n      // Modified: send the full text to support / style commands\n      dataProvider(actualToken, _this.state.value, function (data, token) {\n        // Make sure that the result is still relevant for current query\n        if (token !== _this.state.actualToken) return;\n        if (!Array.isArray(data)) {\n          throw new Error('Trigger provider has to provide an array!');\n        }\n        if (!isValidElementType(component)) {\n          throw new Error('Component should be defined!');\n        }\n        // throw away if we resolved old trigger\n        if (currentTrigger !== _this.state.currentTrigger) return;\n        // if we haven't resolved any data let's close the autocomplete\n        if (!data.length) {\n          _this._closeAutocomplete();\n          return;\n        }\n        _this.setState({\n          component: component,\n          data: data,\n          dataLoading: false\n        });\n      });\n    };\n    _this._getSuggestions = function (paramTrigger) {\n      var _a = _this.state,\n        stateTrigger = _a.currentTrigger,\n        data = _a.data;\n      var currentTrigger = paramTrigger || stateTrigger;\n      if (!currentTrigger || !data || data && !data.length) return null;\n      return data;\n    };\n    /**\n     * Close autocomplete, also clean up trigger (to avoid slow promises)\n     */\n    _this._closeAutocomplete = function () {\n      _this.setState({\n        currentTrigger: null,\n        data: null,\n        dataLoading: false,\n        left: null,\n        top: null\n      });\n    };\n    _this._cleanUpProps = function () {\n      var props = __assign({}, _this.props);\n      var notSafe = ['additionalTextareaProps', 'className', 'closeCommandsList', 'closeMentionsList', 'closeOnClickOutside', 'containerClassName', 'containerStyle', 'disableMentions', 'dropdownClassName', 'dropdownStyle', 'grow', 'handleSubmit', 'innerRef', 'itemClassName', 'itemStyle', 'listClassName', 'listStyle', 'loaderClassName', 'loaderStyle', 'loadingComponent', 'minChar', 'movePopupAsYouType', 'onCaretPositionChange', 'onChange', 'ref', 'replaceWord', 'scrollToItem', 'shouldSubmit', 'showCommandsList', 'showMentionsList', 'SuggestionItem', 'SuggestionList', 'trigger', 'value'];\n      // eslint-disable-next-line\n      for (var prop in props) {\n        if (notSafe.includes(prop)) delete props[prop];\n      }\n      return props;\n    };\n    _this._isCommand = function (text) {\n      if (text[0] !== '/') return false;\n      var tokens = text.split(' ');\n      return tokens.length <= 1;\n    };\n    _this._changeHandler = function (e) {\n      var _a = _this.props,\n        minChar = _a.minChar,\n        movePopupAsYouType = _a.movePopupAsYouType,\n        onCaretPositionChange = _a.onCaretPositionChange,\n        onChange = _a.onChange,\n        trigger = _a.trigger;\n      var _b = _this.state,\n        left = _b.left,\n        top = _b.top;\n      var textarea = e.target;\n      var selectionEnd = textarea.selectionEnd,\n        selectionStart = textarea.selectionStart,\n        value = textarea.value;\n      if (onChange) {\n        e.persist();\n        onChange(e);\n      }\n      if (onCaretPositionChange) onCaretPositionChange(_this.getCaretPosition());\n      _this.setState({\n        value: value\n      });\n      var currentTrigger;\n      var lastToken;\n      if (_this._isCommand(value)) {\n        currentTrigger = '/';\n        lastToken = value;\n      } else {\n        var triggerTokens = Object.keys(trigger).join().replace('/', '');\n        var triggerNorWhitespace = \"[^\\\\s\".concat(triggerTokens, \"]*\");\n        var regex = new RegExp(\"(?!^|\\\\W)?[\".concat(triggerTokens, \"]\").concat(triggerNorWhitespace, \"\\\\s?\").concat(triggerNorWhitespace, \"$\"), 'g');\n        var tokenMatch = value.slice(0, selectionEnd).match(regex);\n        lastToken = tokenMatch && tokenMatch[tokenMatch.length - 1].trim();\n        currentTrigger = lastToken && Object.keys(trigger).find(function (a) {\n          return a === lastToken[0];\n        }) || null;\n      }\n      /*\n       if we lost the trigger token or there is no following character we want to close\n       the autocomplete\n      */\n      if (!lastToken || lastToken.length <= minChar) {\n        _this._closeAutocomplete();\n        return;\n      }\n      var actualToken = lastToken.slice(1);\n      // if trigger is not configured step out from the function, otherwise proceed\n      if (!currentTrigger) return;\n      if (movePopupAsYouType || top === null && left === null ||\n      // if we have single char - trigger it means we want to re-position the autocomplete\n      lastToken.length === 1) {\n        var _c = getCaretCoordinates(textarea, selectionEnd),\n          newLeft = _c.left,\n          newTop = _c.top;\n        _this.setState({\n          // make position relative to textarea\n          left: newLeft,\n          top: newTop - _this.textareaRef.scrollTop || 0\n        });\n      }\n      _this.setState({\n        actualToken: actualToken,\n        currentTrigger: currentTrigger,\n        selectionEnd: selectionEnd,\n        selectionStart: selectionStart\n      }, function () {\n        try {\n          _this._getValuesFromProvider();\n        } catch (err) {\n          errorMessage(err.message);\n        }\n      });\n    };\n    _this._selectHandler = function (e) {\n      var _a = _this.props,\n        onCaretPositionChange = _a.onCaretPositionChange,\n        onSelect = _a.onSelect;\n      if (onCaretPositionChange) onCaretPositionChange(_this.getCaretPosition());\n      if (onSelect) {\n        e.persist();\n        onSelect(e);\n      }\n    };\n    // The textarea itself is outside the auto-select dropdown.\n    _this._onClickAndBlurHandler = function (e) {\n      var _a = _this.props,\n        closeOnClickOutside = _a.closeOnClickOutside,\n        onBlur = _a.onBlur;\n      // If this is a click: e.target is the textarea, and e.relatedTarget is the thing\n      // that was actually clicked. If we clicked inside the auto-select dropdown, then\n      // that's not a blur, from the auto-select point of view, so then do nothing.\n      var el = e.relatedTarget;\n      // If this is a blur event in Safari, then relatedTarget is never a dropdown item, but a common parent\n      // of textarea and dropdown container. That means that dropdownRef will not contain its parent and the\n      // autocomplete will be closed before onclick handler can be invoked selecting an item.\n      // It seems that Safari has different implementation determining the relatedTarget node than Chrome and Firefox.\n      // Therefore, if focused away in Safari, the dropdown will be kept rendered until pressing Esc or selecting and item from it.\n      var focusedAwayInSafari = isSafari() && e.type === 'blur';\n      if (_this.dropdownRef && el instanceof Node && _this.dropdownRef.contains(el) || focusedAwayInSafari) {\n        return;\n      }\n      if (closeOnClickOutside) _this._closeAutocomplete();\n      if (onBlur) {\n        e.persist();\n        onBlur(e);\n      }\n    };\n    _this._onScrollHandler = function () {\n      return _this._closeAutocomplete();\n    };\n    _this._dropdownScroll = function (item) {\n      var scrollToItem = _this.props.scrollToItem;\n      if (!scrollToItem) return;\n      if (scrollToItem === true) {\n        defaultScrollToItem(_this.dropdownRef, item);\n        return;\n      }\n      if (typeof scrollToItem !== 'function' || scrollToItem.length !== 2) {\n        throw new Error('`scrollToItem` has to be boolean (true for default implementation) or function with two parameters: container, item.');\n      }\n      scrollToItem(_this.dropdownRef, item);\n    };\n    _this.getTriggerProps = function () {\n      var _a = _this.props,\n        showCommandsList = _a.showCommandsList,\n        showMentionsList = _a.showMentionsList,\n        trigger = _a.trigger;\n      var _b = _this.state,\n        component = _b.component,\n        currentTrigger = _b.currentTrigger,\n        selectionEnd = _b.selectionEnd,\n        value = _b.value;\n      var selectedItem = _this._getItemOnSelect();\n      var suggestionData = _this._getSuggestions();\n      var textToReplace = _this._getTextToReplace();\n      var triggerProps = {\n        component: component,\n        currentTrigger: currentTrigger,\n        getSelectedItem: selectedItem,\n        getTextToReplace: textToReplace,\n        selectionEnd: selectionEnd,\n        value: value,\n        values: suggestionData\n      };\n      if (showCommandsList && trigger['/'] || showMentionsList && trigger['@']) {\n        var currentCommands_1;\n        var getCommands = trigger[showCommandsList ? '/' : '@'].dataProvider;\n        getCommands === null || getCommands === void 0 ? void 0 : getCommands('', showCommandsList ? '/' : '@', function (data) {\n          currentCommands_1 = data;\n        });\n        triggerProps.component = showCommandsList ? CommandItem : UserItem;\n        triggerProps.currentTrigger = showCommandsList ? '/' : '@';\n        triggerProps.getTextToReplace = _this._getTextToReplace(showCommandsList ? '/' : '@');\n        triggerProps.getSelectedItem = _this._getItemOnSelect(showCommandsList ? '/' : '@');\n        triggerProps.selectionEnd = 1;\n        triggerProps.value = showCommandsList ? '/' : '@';\n        triggerProps.values = currentCommands_1;\n      }\n      return triggerProps;\n    };\n    _this.setDropdownRef = function (element) {\n      _this.dropdownRef = element;\n    };\n    var _a = _this.props,\n      loadingComponent = _a.loadingComponent,\n      trigger = _a.trigger,\n      value = _a.value;\n    // TODO: it would be better to have the parent control state...\n    // if (value) this.state.value = value;\n    if (!loadingComponent) {\n      throw new Error('RTA: loadingComponent is not defined');\n    }\n    if (!trigger) {\n      throw new Error('RTA: trigger is not defined');\n    }\n    _this.state = {\n      actualToken: '',\n      component: null,\n      currentTrigger: null,\n      data: null,\n      dataLoading: false,\n      left: null,\n      selectionEnd: 0,\n      selectionStart: 0,\n      top: null,\n      value: value || ''\n    };\n    return _this;\n  }\n  /**\n   * setup to emulate the UNSAFE_componentWillReceiveProps\n   */\n  ReactTextareaAutocomplete.getDerivedStateFromProps = function (props, state) {\n    if (props.value !== state.propsValue || !state.value) {\n      return {\n        propsValue: props.value,\n        value: props.value\n      };\n    } else {\n      return null;\n    }\n  };\n  ReactTextareaAutocomplete.prototype.renderSuggestionListContainer = function () {\n    var _a = this.props,\n      disableMentions = _a.disableMentions,\n      dropdownClassName = _a.dropdownClassName,\n      dropdownStyle = _a.dropdownStyle,\n      itemClassName = _a.itemClassName,\n      itemStyle = _a.itemStyle,\n      listClassName = _a.listClassName,\n      SuggestionItem = _a.SuggestionItem,\n      _b = _a.SuggestionList,\n      SuggestionList = _b === void 0 ? DefaultSuggestionList : _b;\n    var triggerProps = this.getTriggerProps();\n    if (triggerProps.values && triggerProps.currentTrigger && !(disableMentions && triggerProps.currentTrigger === '@')) {\n      return React.createElement(\"div\", {\n        className: clsx('rta__autocomplete', 'str-chat__suggestion-list-container', dropdownClassName),\n        ref: this.setDropdownRef,\n        style: dropdownStyle\n      }, React.createElement(SuggestionList, __assign({\n        className: clsx('str-chat__suggestion-list', listClassName),\n        dropdownScroll: this._dropdownScroll,\n        itemClassName: clsx('str-chat__suggestion-list-item', itemClassName),\n        itemStyle: itemStyle,\n        onSelect: this._onSelect,\n        SuggestionItem: SuggestionItem\n      }, triggerProps)));\n    }\n    return null;\n  };\n  ReactTextareaAutocomplete.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      className = _a.className,\n      containerClassName = _a.containerClassName,\n      containerStyle = _a.containerStyle,\n      style = _a.style;\n    var _b = this.props.additionalTextareaProps || {},\n      onBlur = _b.onBlur,\n      onChange = _b.onChange,\n      onClick = _b.onClick,\n      onFocus = _b.onFocus,\n      onKeyDown = _b.onKeyDown,\n      onScroll = _b.onScroll,\n      onSelect = _b.onSelect,\n      restAdditionalTextareaProps = __rest(_b, [\"onBlur\", \"onChange\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onScroll\", \"onSelect\"]);\n    var maxRows = this.props.maxRows;\n    var _c = this.state,\n      dataLoading = _c.dataLoading,\n      value = _c.value;\n    if (!this.props.grow) maxRows = 1;\n    // By setting defaultValue to undefined, avoid error:\n    // ForwardRef(TextareaAutosize) contains a textarea with both value and defaultValue props.\n    // Textarea elements must be either controlled or uncontrolled\n    return React.createElement(\"div\", {\n      className: clsx('rta', containerClassName, {\n        'rta--loading': dataLoading\n      }),\n      style: containerStyle\n    }, this.renderSuggestionListContainer(), React.createElement(Textarea, __assign({\n      \"data-testid\": 'message-input'\n    }, this._cleanUpProps(), {\n      className: clsx('rta__textarea', className),\n      maxRows: maxRows,\n      onBlur: function (e) {\n        _this._onClickAndBlurHandler(e);\n        onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);\n      },\n      onChange: function (e) {\n        _this._changeHandler(e);\n        onChange === null || onChange === void 0 ? void 0 : onChange(e);\n      },\n      onClick: function (e) {\n        _this._onClickAndBlurHandler(e);\n        onClick === null || onClick === void 0 ? void 0 : onClick(e);\n      },\n      onFocus: function (e) {\n        var _a, _b;\n        (_b = (_a = _this.props).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n        onFocus === null || onFocus === void 0 ? void 0 : onFocus(e);\n      },\n      onKeyDown: function (e) {\n        _this._handleKeyDown(e);\n        onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n      },\n      onScroll: function (e) {\n        _this._onScrollHandler(e);\n        onScroll === null || onScroll === void 0 ? void 0 : onScroll(e);\n      },\n      onSelect: function (e) {\n        _this._selectHandler(e);\n        onSelect === null || onSelect === void 0 ? void 0 : onSelect(e);\n      },\n      ref: function (ref) {\n        var _a;\n        (_a = _this.props) === null || _a === void 0 ? void 0 : _a.innerRef(ref);\n        _this.textareaRef = ref;\n      },\n      style: style,\n      value: value\n    }, restAdditionalTextareaProps, {\n      defaultValue: undefined\n    })));\n  };\n  ReactTextareaAutocomplete.defaultProps = {\n    closeOnClickOutside: true,\n    maxRows: 10,\n    minChar: 1,\n    movePopupAsYouType: false,\n    scrollToItem: true,\n    value: ''\n  };\n  return ReactTextareaAutocomplete;\n}(React.Component);\nexport { ReactTextareaAutocomplete };\nReactTextareaAutocomplete.propTypes = {\n  className: PropTypes.string,\n  closeOnClickOutside: PropTypes.bool,\n  containerClassName: PropTypes.string,\n  containerStyle: PropTypes.object,\n  disableMentions: PropTypes.bool,\n  dropdownClassName: PropTypes.string,\n  dropdownStyle: PropTypes.object,\n  itemClassName: PropTypes.string,\n  itemStyle: PropTypes.object,\n  listClassName: PropTypes.string,\n  listStyle: PropTypes.object,\n  loaderClassName: PropTypes.string,\n  loaderStyle: PropTypes.object,\n  loadingComponent: PropTypes.elementType,\n  minChar: PropTypes.number,\n  onBlur: PropTypes.func,\n  onCaretPositionChange: PropTypes.func,\n  onChange: PropTypes.func,\n  onSelect: PropTypes.func,\n  shouldSubmit: PropTypes.func,\n  style: PropTypes.object,\n  SuggestionList: PropTypes.elementType,\n  trigger: triggerPropsCheck,\n  value: PropTypes.string\n};","map":{"version":3,"names":["__assign","__extends","__rest","React","PropTypes","Textarea","getCaretCoordinates","isValidElementType","clsx","List","DefaultSuggestionList","DEFAULT_CARET_POSITION","defaultScrollToItem","errorMessage","triggerPropsCheck","CommandItem","UserItem","isSafari","ReactTextareaAutocomplete","_super","props","_this","call","getSelectionPosition","textareaRef","selectionEnd","selectionStart","getSelectedText","_a","state","value","substr","setCaretPosition","position","focus","setSelectionRange","getCaretPosition","_defaultShouldSubmit","event","key","shiftKey","nativeEvent","isComposing","_handleKeyDown","shouldSubmit","dropdownRef","preventDefault","_onEnter","_onSpace","_closeAutocomplete","trigger","currentTrigger","data","_replaceWord","handleSubmit","replaceWord","hasFocus","matches","lastWordRegex","match","exec","slice","lastWord","spaces","newWord","textBeforeWord","length","textAfterCaret","newText","setState","e","CustomEvent","bubbles","dispatchEvent","onChange","_onSelect","newToken","closeCommandsList","closeMentionsList","showCommandsList","showMentionsList","_b","stateTrigger","textareaValue","computeCaretPosition","token","startToken","Number","isInteger","Error","textToModify","startOfTokenPosition","lastIndexOf","newTokenString","caretPosition","concat","text","newCaretPosition","modifiedText","substring","valueToReplace","replace","dataLoading","_getItemOnSelect","paramTrigger","triggerSettings","_getCurrentTriggerSettings","callback","item","_getTextToReplace","actualToken","output","textToReplace","String","_getValuesFromProvider","component","dataProvider","Array","isArray","_getSuggestions","left","top","_cleanUpProps","notSafe","prop","includes","_isCommand","tokens","split","_changeHandler","minChar","movePopupAsYouType","onCaretPositionChange","textarea","target","persist","lastToken","triggerTokens","Object","keys","join","triggerNorWhitespace","regex","RegExp","tokenMatch","trim","find","a","_c","newLeft","newTop","scrollTop","err","message","_selectHandler","onSelect","_onClickAndBlurHandler","closeOnClickOutside","onBlur","el","relatedTarget","focusedAwayInSafari","type","Node","contains","_onScrollHandler","_dropdownScroll","scrollToItem","getTriggerProps","selectedItem","suggestionData","triggerProps","getSelectedItem","getTextToReplace","values","currentCommands_1","getCommands","setDropdownRef","element","loadingComponent","getDerivedStateFromProps","propsValue","prototype","renderSuggestionListContainer","disableMentions","dropdownClassName","dropdownStyle","itemClassName","itemStyle","listClassName","SuggestionItem","SuggestionList","createElement","className","ref","style","dropdownScroll","render","containerClassName","containerStyle","additionalTextareaProps","onClick","onFocus","onKeyDown","onScroll","restAdditionalTextareaProps","maxRows","grow","innerRef","defaultValue","undefined","defaultProps","Component","propTypes","string","bool","object","listStyle","loaderClassName","loaderStyle","elementType","number","func"],"sources":["C:/Users/praka/OneDrive/Desktop/Tic-Tac-Toe/client/node_modules/stream-chat-react/dist/components/AutoCompleteTextarea/Textarea.js"],"sourcesContent":["import { __assign, __extends, __rest } from \"tslib\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Textarea from 'react-textarea-autosize';\nimport getCaretCoordinates from 'textarea-caret';\nimport { isValidElementType } from 'react-is';\nimport clsx from 'clsx';\nimport { List as DefaultSuggestionList } from './List';\nimport { DEFAULT_CARET_POSITION, defaultScrollToItem, errorMessage, triggerPropsCheck, } from './utils';\nimport { CommandItem } from '../CommandItem';\nimport { UserItem } from '../UserItem';\nimport { isSafari } from '../../utils/browsers';\nvar ReactTextareaAutocomplete = /** @class */ (function (_super) {\n    __extends(ReactTextareaAutocomplete, _super);\n    function ReactTextareaAutocomplete(props) {\n        var _this = _super.call(this, props) || this;\n        // FIXME: unused method\n        _this.getSelectionPosition = function () {\n            if (!_this.textareaRef)\n                return null;\n            return {\n                selectionEnd: _this.textareaRef.selectionEnd,\n                selectionStart: _this.textareaRef.selectionStart,\n            };\n        };\n        // FIXME: unused method\n        _this.getSelectedText = function () {\n            if (!_this.textareaRef)\n                return null;\n            var _a = _this.textareaRef, selectionEnd = _a.selectionEnd, selectionStart = _a.selectionStart;\n            if (selectionStart === selectionEnd)\n                return null;\n            return _this.state.value.substr(selectionStart, selectionEnd - selectionStart);\n        };\n        _this.setCaretPosition = function (position) {\n            if (position === void 0) { position = 0; }\n            if (!_this.textareaRef)\n                return;\n            _this.textareaRef.focus();\n            _this.textareaRef.setSelectionRange(position, position);\n        };\n        _this.getCaretPosition = function () {\n            if (!_this.textareaRef)\n                return 0;\n            return _this.textareaRef.selectionEnd;\n        };\n        /**\n         * isComposing prevents double submissions in Korean and other languages.\n         * starting point for a read:\n         * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/isComposing\n         * In the long term, the fix should happen by handling keypress, but changing this has unknown implications.\n         * @param event React.KeyboardEvent\n         */\n        _this._defaultShouldSubmit = function (event) {\n            return event.key === 'Enter' && !event.shiftKey && !event.nativeEvent.isComposing;\n        };\n        _this._handleKeyDown = function (event) {\n            var _a = _this.props.shouldSubmit, shouldSubmit = _a === void 0 ? _this._defaultShouldSubmit : _a;\n            // prevent default behaviour when the selection list is rendered\n            if ((event.key === 'ArrowUp' || event.key === 'ArrowDown') && _this.dropdownRef)\n                event.preventDefault();\n            if (shouldSubmit === null || shouldSubmit === void 0 ? void 0 : shouldSubmit(event))\n                return _this._onEnter(event);\n            if (event.key === ' ')\n                return _this._onSpace(event);\n            if (event.key === 'Escape')\n                return _this._closeAutocomplete();\n        };\n        _this._onEnter = function (event) {\n            if (!_this.textareaRef)\n                return;\n            var trigger = _this.state.currentTrigger;\n            if (!trigger || !_this.state.data) {\n                // trigger a submit\n                _this._replaceWord();\n                if (_this.textareaRef) {\n                    _this.textareaRef.selectionEnd = 0;\n                }\n                _this.props.handleSubmit(event);\n                _this._closeAutocomplete();\n            }\n        };\n        _this._onSpace = function () {\n            if (!_this.props.replaceWord || !_this.textareaRef)\n                return;\n            // don't change characters if the element doesn't have focus\n            var hasFocus = _this.textareaRef.matches(':focus');\n            if (!hasFocus)\n                return;\n            _this._replaceWord();\n        };\n        _this._replaceWord = function () {\n            var value = _this.state.value;\n            var lastWordRegex = /([^\\s]+)(\\s*)$/;\n            var match = lastWordRegex.exec(value.slice(0, _this.getCaretPosition()));\n            var lastWord = match && match[1];\n            if (!lastWord)\n                return;\n            var spaces = match[2];\n            var newWord = _this.props.replaceWord(lastWord);\n            if (newWord == null)\n                return;\n            var textBeforeWord = value.slice(0, _this.getCaretPosition() - match[0].length);\n            var textAfterCaret = value.slice(_this.getCaretPosition(), -1);\n            var newText = textBeforeWord + newWord + spaces + textAfterCaret;\n            _this.setState({\n                value: newText,\n            }, function () {\n                // fire onChange event after successful selection\n                var e = new CustomEvent('change', { bubbles: true });\n                _this.textareaRef.dispatchEvent(e);\n                if (_this.props.onChange)\n                    _this.props.onChange(e);\n            });\n        };\n        _this._onSelect = function (newToken) {\n            var _a = _this.props, closeCommandsList = _a.closeCommandsList, closeMentionsList = _a.closeMentionsList, onChange = _a.onChange, showCommandsList = _a.showCommandsList, showMentionsList = _a.showMentionsList;\n            var _b = _this.state, stateTrigger = _b.currentTrigger, selectionEnd = _b.selectionEnd, textareaValue = _b.value;\n            var currentTrigger = showCommandsList ? '/' : showMentionsList ? '@' : stateTrigger;\n            if (!currentTrigger)\n                return;\n            var computeCaretPosition = function (position, token, startToken) {\n                switch (position) {\n                    case 'start':\n                        return startToken;\n                    case 'next':\n                    case 'end':\n                        return startToken + token.length;\n                    default:\n                        if (!Number.isInteger(position)) {\n                            throw new Error('RTA: caretPosition should be \"start\", \"next\", \"end\" or number.');\n                        }\n                        return position;\n                }\n            };\n            var textToModify = showCommandsList\n                ? '/'\n                : showMentionsList\n                    ? '@'\n                    : textareaValue.slice(0, selectionEnd);\n            var startOfTokenPosition = textToModify.lastIndexOf(currentTrigger);\n            // we add space after emoji is selected if a caret position is next\n            var newTokenString = newToken.caretPosition === 'next' ? \"\".concat(newToken.text, \" \") : newToken.text;\n            var newCaretPosition = computeCaretPosition(newToken.caretPosition, newTokenString, startOfTokenPosition);\n            var modifiedText = textToModify.substring(0, startOfTokenPosition) + newTokenString;\n            var valueToReplace = textareaValue.replace(textToModify, modifiedText);\n            // set the new textarea value and after that set the caret back to its position\n            _this.setState({\n                dataLoading: false,\n                value: valueToReplace,\n            }, function () {\n                // fire onChange event after successful selection\n                var e = new CustomEvent('change', { bubbles: true });\n                _this.textareaRef.dispatchEvent(e);\n                if (onChange)\n                    onChange(e);\n                _this.setCaretPosition(newCaretPosition);\n            });\n            _this._closeAutocomplete();\n            if (showCommandsList)\n                closeCommandsList();\n            if (showMentionsList)\n                closeMentionsList();\n        };\n        _this._getItemOnSelect = function (paramTrigger) {\n            var stateTrigger = _this.state.currentTrigger;\n            var triggerSettings = _this._getCurrentTriggerSettings(paramTrigger);\n            var currentTrigger = paramTrigger || stateTrigger;\n            if (!currentTrigger || !triggerSettings)\n                return null;\n            var callback = triggerSettings.callback;\n            if (!callback)\n                return null;\n            return function (item) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Output functor is not defined! You have to define \"output\" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');\n                }\n                if (callback) {\n                    return callback(item, currentTrigger);\n                }\n                return null;\n            };\n        };\n        _this._getTextToReplace = function (paramTrigger) {\n            var _a = _this.state, actualToken = _a.actualToken, stateTrigger = _a.currentTrigger;\n            var triggerSettings = _this._getCurrentTriggerSettings(paramTrigger);\n            var currentTrigger = paramTrigger || stateTrigger;\n            if (!currentTrigger || !triggerSettings)\n                return null;\n            var output = triggerSettings.output;\n            return function (item) {\n                if (typeof item === 'object' && (!output || typeof output !== 'function')) {\n                    throw new Error('Output functor is not defined! If you are using items as object you have to define \"output\" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');\n                }\n                if (output) {\n                    var textToReplace = output(item, currentTrigger);\n                    if (!textToReplace || typeof textToReplace === 'number') {\n                        throw new Error(\"Output functor should return string or object in shape {text: string, caretPosition: string | number}.\\nGot \\\"\".concat(String(textToReplace), \"\\\". Check the implementation for trigger \\\"\").concat(currentTrigger, \"\\\" and its token \\\"\").concat(actualToken, \"\\\"\\n\\nSee https://github.com/webscopeio/react-textarea-autocomplete#trigger-type for more informations.\\n\"));\n                    }\n                    if (typeof textToReplace === 'string') {\n                        return {\n                            caretPosition: DEFAULT_CARET_POSITION,\n                            text: textToReplace,\n                        };\n                    }\n                    if (!textToReplace.text && currentTrigger !== ':') {\n                        throw new Error(\"Output \\\"text\\\" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger \\\"\".concat(currentTrigger, \"\\\" and its token \\\"\").concat(actualToken, \"\\\"\\n\"));\n                    }\n                    if (!textToReplace.caretPosition) {\n                        throw new Error(\"Output \\\"caretPosition\\\" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger \\\"\".concat(currentTrigger, \"\\\" and its token \\\"\").concat(actualToken, \"\\\"\\n\"));\n                    }\n                    return textToReplace;\n                }\n                if (typeof item !== 'string') {\n                    throw new Error('Output item should be string\\n');\n                }\n                return {\n                    caretPosition: DEFAULT_CARET_POSITION,\n                    text: \"\".concat(currentTrigger).concat(item).concat(currentTrigger),\n                };\n            };\n        };\n        _this._getCurrentTriggerSettings = function (paramTrigger) {\n            var stateTrigger = _this.state.currentTrigger;\n            var currentTrigger = paramTrigger || stateTrigger;\n            if (!currentTrigger)\n                return null;\n            return _this.props.trigger[currentTrigger];\n        };\n        _this._getValuesFromProvider = function () {\n            var _a = _this.state, actualToken = _a.actualToken, currentTrigger = _a.currentTrigger;\n            var triggerSettings = _this._getCurrentTriggerSettings();\n            if (!currentTrigger || !triggerSettings)\n                return;\n            var component = triggerSettings.component, dataProvider = triggerSettings.dataProvider;\n            if (typeof dataProvider !== 'function') {\n                throw new Error('Trigger provider has to be a function!');\n            }\n            _this.setState({ dataLoading: true });\n            // Modified: send the full text to support / style commands\n            dataProvider(actualToken, _this.state.value, function (data, token) {\n                // Make sure that the result is still relevant for current query\n                if (token !== _this.state.actualToken)\n                    return;\n                if (!Array.isArray(data)) {\n                    throw new Error('Trigger provider has to provide an array!');\n                }\n                if (!isValidElementType(component)) {\n                    throw new Error('Component should be defined!');\n                }\n                // throw away if we resolved old trigger\n                if (currentTrigger !== _this.state.currentTrigger)\n                    return;\n                // if we haven't resolved any data let's close the autocomplete\n                if (!data.length) {\n                    _this._closeAutocomplete();\n                    return;\n                }\n                _this.setState({\n                    component: component,\n                    data: data,\n                    dataLoading: false,\n                });\n            });\n        };\n        _this._getSuggestions = function (paramTrigger) {\n            var _a = _this.state, stateTrigger = _a.currentTrigger, data = _a.data;\n            var currentTrigger = paramTrigger || stateTrigger;\n            if (!currentTrigger || !data || (data && !data.length))\n                return null;\n            return data;\n        };\n        /**\n         * Close autocomplete, also clean up trigger (to avoid slow promises)\n         */\n        _this._closeAutocomplete = function () {\n            _this.setState({\n                currentTrigger: null,\n                data: null,\n                dataLoading: false,\n                left: null,\n                top: null,\n            });\n        };\n        _this._cleanUpProps = function () {\n            var props = __assign({}, _this.props);\n            var notSafe = [\n                'additionalTextareaProps',\n                'className',\n                'closeCommandsList',\n                'closeMentionsList',\n                'closeOnClickOutside',\n                'containerClassName',\n                'containerStyle',\n                'disableMentions',\n                'dropdownClassName',\n                'dropdownStyle',\n                'grow',\n                'handleSubmit',\n                'innerRef',\n                'itemClassName',\n                'itemStyle',\n                'listClassName',\n                'listStyle',\n                'loaderClassName',\n                'loaderStyle',\n                'loadingComponent',\n                'minChar',\n                'movePopupAsYouType',\n                'onCaretPositionChange',\n                'onChange',\n                'ref',\n                'replaceWord',\n                'scrollToItem',\n                'shouldSubmit',\n                'showCommandsList',\n                'showMentionsList',\n                'SuggestionItem',\n                'SuggestionList',\n                'trigger',\n                'value',\n            ];\n            // eslint-disable-next-line\n            for (var prop in props) {\n                if (notSafe.includes(prop))\n                    delete props[prop];\n            }\n            return props;\n        };\n        _this._isCommand = function (text) {\n            if (text[0] !== '/')\n                return false;\n            var tokens = text.split(' ');\n            return tokens.length <= 1;\n        };\n        _this._changeHandler = function (e) {\n            var _a = _this.props, minChar = _a.minChar, movePopupAsYouType = _a.movePopupAsYouType, onCaretPositionChange = _a.onCaretPositionChange, onChange = _a.onChange, trigger = _a.trigger;\n            var _b = _this.state, left = _b.left, top = _b.top;\n            var textarea = e.target;\n            var selectionEnd = textarea.selectionEnd, selectionStart = textarea.selectionStart, value = textarea.value;\n            if (onChange) {\n                e.persist();\n                onChange(e);\n            }\n            if (onCaretPositionChange)\n                onCaretPositionChange(_this.getCaretPosition());\n            _this.setState({ value: value });\n            var currentTrigger;\n            var lastToken;\n            if (_this._isCommand(value)) {\n                currentTrigger = '/';\n                lastToken = value;\n            }\n            else {\n                var triggerTokens = Object.keys(trigger).join().replace('/', '');\n                var triggerNorWhitespace = \"[^\\\\s\".concat(triggerTokens, \"]*\");\n                var regex = new RegExp(\"(?!^|\\\\W)?[\".concat(triggerTokens, \"]\").concat(triggerNorWhitespace, \"\\\\s?\").concat(triggerNorWhitespace, \"$\"), 'g');\n                var tokenMatch = value.slice(0, selectionEnd).match(regex);\n                lastToken = tokenMatch && tokenMatch[tokenMatch.length - 1].trim();\n                currentTrigger = (lastToken && Object.keys(trigger).find(function (a) { return a === lastToken[0]; })) || null;\n            }\n            /*\n             if we lost the trigger token or there is no following character we want to close\n             the autocomplete\n            */\n            if (!lastToken || lastToken.length <= minChar) {\n                _this._closeAutocomplete();\n                return;\n            }\n            var actualToken = lastToken.slice(1);\n            // if trigger is not configured step out from the function, otherwise proceed\n            if (!currentTrigger)\n                return;\n            if (movePopupAsYouType ||\n                (top === null && left === null) ||\n                // if we have single char - trigger it means we want to re-position the autocomplete\n                lastToken.length === 1) {\n                var _c = getCaretCoordinates(textarea, selectionEnd), newLeft = _c.left, newTop = _c.top;\n                _this.setState({\n                    // make position relative to textarea\n                    left: newLeft,\n                    top: newTop - _this.textareaRef.scrollTop || 0,\n                });\n            }\n            _this.setState({\n                actualToken: actualToken,\n                currentTrigger: currentTrigger,\n                selectionEnd: selectionEnd,\n                selectionStart: selectionStart,\n            }, function () {\n                try {\n                    _this._getValuesFromProvider();\n                }\n                catch (err) {\n                    errorMessage(err.message);\n                }\n            });\n        };\n        _this._selectHandler = function (e) {\n            var _a = _this.props, onCaretPositionChange = _a.onCaretPositionChange, onSelect = _a.onSelect;\n            if (onCaretPositionChange)\n                onCaretPositionChange(_this.getCaretPosition());\n            if (onSelect) {\n                e.persist();\n                onSelect(e);\n            }\n        };\n        // The textarea itself is outside the auto-select dropdown.\n        _this._onClickAndBlurHandler = function (e) {\n            var _a = _this.props, closeOnClickOutside = _a.closeOnClickOutside, onBlur = _a.onBlur;\n            // If this is a click: e.target is the textarea, and e.relatedTarget is the thing\n            // that was actually clicked. If we clicked inside the auto-select dropdown, then\n            // that's not a blur, from the auto-select point of view, so then do nothing.\n            var el = e.relatedTarget;\n            // If this is a blur event in Safari, then relatedTarget is never a dropdown item, but a common parent\n            // of textarea and dropdown container. That means that dropdownRef will not contain its parent and the\n            // autocomplete will be closed before onclick handler can be invoked selecting an item.\n            // It seems that Safari has different implementation determining the relatedTarget node than Chrome and Firefox.\n            // Therefore, if focused away in Safari, the dropdown will be kept rendered until pressing Esc or selecting and item from it.\n            var focusedAwayInSafari = isSafari() && e.type === 'blur';\n            if ((_this.dropdownRef && el instanceof Node && _this.dropdownRef.contains(el)) ||\n                focusedAwayInSafari) {\n                return;\n            }\n            if (closeOnClickOutside)\n                _this._closeAutocomplete();\n            if (onBlur) {\n                e.persist();\n                onBlur(e);\n            }\n        };\n        _this._onScrollHandler = function () { return _this._closeAutocomplete(); };\n        _this._dropdownScroll = function (item) {\n            var scrollToItem = _this.props.scrollToItem;\n            if (!scrollToItem)\n                return;\n            if (scrollToItem === true) {\n                defaultScrollToItem(_this.dropdownRef, item);\n                return;\n            }\n            if (typeof scrollToItem !== 'function' || scrollToItem.length !== 2) {\n                throw new Error('`scrollToItem` has to be boolean (true for default implementation) or function with two parameters: container, item.');\n            }\n            scrollToItem(_this.dropdownRef, item);\n        };\n        _this.getTriggerProps = function () {\n            var _a = _this.props, showCommandsList = _a.showCommandsList, showMentionsList = _a.showMentionsList, trigger = _a.trigger;\n            var _b = _this.state, component = _b.component, currentTrigger = _b.currentTrigger, selectionEnd = _b.selectionEnd, value = _b.value;\n            var selectedItem = _this._getItemOnSelect();\n            var suggestionData = _this._getSuggestions();\n            var textToReplace = _this._getTextToReplace();\n            var triggerProps = {\n                component: component,\n                currentTrigger: currentTrigger,\n                getSelectedItem: selectedItem,\n                getTextToReplace: textToReplace,\n                selectionEnd: selectionEnd,\n                value: value,\n                values: suggestionData,\n            };\n            if ((showCommandsList && trigger['/']) || (showMentionsList && trigger['@'])) {\n                var currentCommands_1;\n                var getCommands = trigger[showCommandsList ? '/' : '@'].dataProvider;\n                getCommands === null || getCommands === void 0 ? void 0 : getCommands('', showCommandsList ? '/' : '@', function (data) {\n                    currentCommands_1 = data;\n                });\n                triggerProps.component = showCommandsList ? CommandItem : UserItem;\n                triggerProps.currentTrigger = showCommandsList ? '/' : '@';\n                triggerProps.getTextToReplace = _this._getTextToReplace(showCommandsList ? '/' : '@');\n                triggerProps.getSelectedItem = _this._getItemOnSelect(showCommandsList ? '/' : '@');\n                triggerProps.selectionEnd = 1;\n                triggerProps.value = showCommandsList ? '/' : '@';\n                triggerProps.values = currentCommands_1;\n            }\n            return triggerProps;\n        };\n        _this.setDropdownRef = function (element) {\n            _this.dropdownRef = element;\n        };\n        var _a = _this.props, loadingComponent = _a.loadingComponent, trigger = _a.trigger, value = _a.value;\n        // TODO: it would be better to have the parent control state...\n        // if (value) this.state.value = value;\n        if (!loadingComponent) {\n            throw new Error('RTA: loadingComponent is not defined');\n        }\n        if (!trigger) {\n            throw new Error('RTA: trigger is not defined');\n        }\n        _this.state = {\n            actualToken: '',\n            component: null,\n            currentTrigger: null,\n            data: null,\n            dataLoading: false,\n            left: null,\n            selectionEnd: 0,\n            selectionStart: 0,\n            top: null,\n            value: value || '',\n        };\n        return _this;\n    }\n    /**\n     * setup to emulate the UNSAFE_componentWillReceiveProps\n     */\n    ReactTextareaAutocomplete.getDerivedStateFromProps = function (props, state) {\n        if (props.value !== state.propsValue || !state.value) {\n            return { propsValue: props.value, value: props.value };\n        }\n        else {\n            return null;\n        }\n    };\n    ReactTextareaAutocomplete.prototype.renderSuggestionListContainer = function () {\n        var _a = this.props, disableMentions = _a.disableMentions, dropdownClassName = _a.dropdownClassName, dropdownStyle = _a.dropdownStyle, itemClassName = _a.itemClassName, itemStyle = _a.itemStyle, listClassName = _a.listClassName, SuggestionItem = _a.SuggestionItem, _b = _a.SuggestionList, SuggestionList = _b === void 0 ? DefaultSuggestionList : _b;\n        var triggerProps = this.getTriggerProps();\n        if (triggerProps.values &&\n            triggerProps.currentTrigger &&\n            !(disableMentions && triggerProps.currentTrigger === '@')) {\n            return (React.createElement(\"div\", { className: clsx('rta__autocomplete', 'str-chat__suggestion-list-container', dropdownClassName), ref: this.setDropdownRef, style: dropdownStyle },\n                React.createElement(SuggestionList, __assign({ className: clsx('str-chat__suggestion-list', listClassName), dropdownScroll: this._dropdownScroll, itemClassName: clsx('str-chat__suggestion-list-item', itemClassName), itemStyle: itemStyle, onSelect: this._onSelect, SuggestionItem: SuggestionItem }, triggerProps))));\n        }\n        return null;\n    };\n    ReactTextareaAutocomplete.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, className = _a.className, containerClassName = _a.containerClassName, containerStyle = _a.containerStyle, style = _a.style;\n        var _b = this.props.additionalTextareaProps || {}, onBlur = _b.onBlur, onChange = _b.onChange, onClick = _b.onClick, onFocus = _b.onFocus, onKeyDown = _b.onKeyDown, onScroll = _b.onScroll, onSelect = _b.onSelect, restAdditionalTextareaProps = __rest(_b, [\"onBlur\", \"onChange\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onScroll\", \"onSelect\"]);\n        var maxRows = this.props.maxRows;\n        var _c = this.state, dataLoading = _c.dataLoading, value = _c.value;\n        if (!this.props.grow)\n            maxRows = 1;\n        // By setting defaultValue to undefined, avoid error:\n        // ForwardRef(TextareaAutosize) contains a textarea with both value and defaultValue props.\n        // Textarea elements must be either controlled or uncontrolled\n        return (React.createElement(\"div\", { className: clsx('rta', containerClassName, {\n                'rta--loading': dataLoading,\n            }), style: containerStyle },\n            this.renderSuggestionListContainer(),\n            React.createElement(Textarea, __assign({ \"data-testid\": 'message-input' }, this._cleanUpProps(), { className: clsx('rta__textarea', className), maxRows: maxRows, onBlur: function (e) {\n                    _this._onClickAndBlurHandler(e);\n                    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);\n                }, onChange: function (e) {\n                    _this._changeHandler(e);\n                    onChange === null || onChange === void 0 ? void 0 : onChange(e);\n                }, onClick: function (e) {\n                    _this._onClickAndBlurHandler(e);\n                    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n                }, onFocus: function (e) {\n                    var _a, _b;\n                    (_b = (_a = _this.props).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n                    onFocus === null || onFocus === void 0 ? void 0 : onFocus(e);\n                }, onKeyDown: function (e) {\n                    _this._handleKeyDown(e);\n                    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n                }, onScroll: function (e) {\n                    _this._onScrollHandler(e);\n                    onScroll === null || onScroll === void 0 ? void 0 : onScroll(e);\n                }, onSelect: function (e) {\n                    _this._selectHandler(e);\n                    onSelect === null || onSelect === void 0 ? void 0 : onSelect(e);\n                }, ref: function (ref) {\n                    var _a;\n                    (_a = _this.props) === null || _a === void 0 ? void 0 : _a.innerRef(ref);\n                    _this.textareaRef = ref;\n                }, style: style, value: value }, restAdditionalTextareaProps, { defaultValue: undefined }))));\n    };\n    ReactTextareaAutocomplete.defaultProps = {\n        closeOnClickOutside: true,\n        maxRows: 10,\n        minChar: 1,\n        movePopupAsYouType: false,\n        scrollToItem: true,\n        value: '',\n    };\n    return ReactTextareaAutocomplete;\n}(React.Component));\nexport { ReactTextareaAutocomplete };\nReactTextareaAutocomplete.propTypes = {\n    className: PropTypes.string,\n    closeOnClickOutside: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    containerStyle: PropTypes.object,\n    disableMentions: PropTypes.bool,\n    dropdownClassName: PropTypes.string,\n    dropdownStyle: PropTypes.object,\n    itemClassName: PropTypes.string,\n    itemStyle: PropTypes.object,\n    listClassName: PropTypes.string,\n    listStyle: PropTypes.object,\n    loaderClassName: PropTypes.string,\n    loaderStyle: PropTypes.object,\n    loadingComponent: PropTypes.elementType,\n    minChar: PropTypes.number,\n    onBlur: PropTypes.func,\n    onCaretPositionChange: PropTypes.func,\n    onChange: PropTypes.func,\n    onSelect: PropTypes.func,\n    shouldSubmit: PropTypes.func,\n    style: PropTypes.object,\n    SuggestionList: PropTypes.elementType,\n    trigger: triggerPropsCheck,\n    value: PropTypes.string,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}